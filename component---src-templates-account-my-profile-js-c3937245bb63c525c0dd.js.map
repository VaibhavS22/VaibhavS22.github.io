{"version":3,"sources":["webpack:///./src/shopify/customerAccessTokenCreateWithMultipass.js","webpack:///./src/shopify/fetchCustomerAccessToken.js","webpack:///./src/components/Form.js","webpack:///./src/components/Account/SidebarNav.js","webpack:///./src/components/Account/AccountWrapper.js","webpack:///./src/shopify/customerAddressCreate.js","webpack:///./src/shopify/customerAddressDelete.js","webpack:///./src/shopify/customerAddressUpdate.js","webpack:///./src/shopify/customerDefaultAddressUpdate.js","webpack:///./src/hooks/useCustomerAddress.js","webpack:///./src/components/Account/AddressModal.js","webpack:///./src/components/Account/Address.js","webpack:///./src/templates/Account/MyProfile.js","webpack:///./src/components/Account/PageHeader.js","webpack:///./src/shopify/queryCustomer.js","webpack:///./src/shopify/queryLatestCustomer.js","webpack:///./src/shopify/loadCustomerAccessToken.js","webpack:///./src/hooks/useCustomer.js"],"names":["mutation","gql","customerAccessTokenCreateWithMultipass","client","variables","mutate","fetchCustomerAccessToken","a","Auth","user","getUserSession","userSession","headers","Headers","append","idToken","jwtToken","fetch","process","method","multipassFetch","json","multipassToken","accessTokenResult","customerAccessToken","data","StyledForm","styled","form","props","theme","breakpoints","desktopSmall","desktopVw","FieldsContainer","div","StyledContainer","Container","SubmitButton","Button","fonts","primary","colors","greyLighter","CheckBox","input","secondary","DefaultAddressContainer","Form","children","fields","title","register","errors","formValues","handleSubmit","disableSubmit","submitButtonText","loading","defaultAddressCheckbox","onCheckboxChange","onSubmit","map","f","i","__typename","Fragment","key","id","type","className","width","placeholder","required","aria-label","label","name","defaultValue","range","displayValues","options","radioOptions","defaultChecked","onChange","black","disabled","StyledSidebarNav","SelectWrapper","MobileSelect","select","Dropdown","DropdownIcon","Sticky","header","desktop","height","WelcomeText","heading","NavWrapper","Nav","nav","NavItem","ContactDetails","silver","Logout","TextButton","greyLight","SidebarNav","menuList","contact","activeSlug","signOutUser","useSignoutUser","e","value","target","navigate","handleChange","menuItem","getLinkPath","text","to","active","documentToReactComponents","onClick","trackParams","trackInternal","category","action","context","login_email","email","lb_user_id","getCookie","ANALYTIC_COOKIES","LB_USER_ID","StyledAccountWrapper","Wrapper","ContentWrapper","AccountWrapper","menu","heroImage","useEffect","isLoggedIn","window","location","href","getCurrentUser","customerAddressCreate","customerAddressDelete","customerAddressUpdate","customerDefaultAddressUpdate","useCustomerAddress","stores","useContext","StoreContext","loadState","createAddress","address","lastbrand","accessToken","addressResponse","response","error","captureException","API","deleteAddress","addressId","updateAddress","updateDefaultAddress","StyledModal","Modal","ErrorMsg","p","AddressModal","open","closeModal","addressForm","refreshCustomerAddress","initialFormData","mode","useForm","defaultValues","getValues","useState","setIsError","errorMsg","setErrorMsg","defaultAddressErrorMsg","setDefaultAddressErrorMsg","isDefaultAddressError","setIsDefaultAddressError","setLoading","defaultAddress","setDefaultAddress","defaultAddressMsg","defaultAddressResponseHandler","customerUserErrors","length","Error","JSON","stringify","responseHandler","customerAddress","then","message","onClose","contentfulfields","checked","StyledAddress","AddressLine","Buttons","StyledTextButton","Address","firstName","lastName","address1","address2","city","provinceCode","province","phone","company","zip","country","isError","modalOpen","setModalOpen","formData","confirm","Addresses","StyledButton","AddressList","ul","AddressItem","li","MyProfileQuery","MyProfile","page","contentfulAccountPage","customerData","setCustomerData","useCustomer","customer","refreshCustomer","hero","slug","PageHeader","addAddressForm","addresses","edges","node","StyledPageHeader","Title","h1","Text","query","queryShopifyCustomer","queryShopifyLatestCustomer","fetchPolicy","saveCustomerAccessToken","saveState","loadCustomerAccessToken","Date","parse","expiresAt","console","log","newAccessToken","setCustomer","refreshCustomerData","setRefreshCustomerData","getCustomer","getLatestCustomer","checkRefreshCustomer"],"mappings":"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","file":"component---src-templates-account-my-profile-js-c3937245bb63c525c0dd.js","sourcesContent":["import { gql } from '@apollo/client'\n\nconst mutation = gql`\n  mutation customerAccessTokenCreateWithMultipass($multipassToken: String!) {\n    customerAccessTokenCreateWithMultipass(multipassToken: $multipassToken) {\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`\n\n/**\n * https://help.shopify.com/en/api/storefront-api/reference/mutation/checkoutcreate\n *\n * @param {{multipassToken: String}} multipassToken\n */\nconst customerAccessTokenCreateWithMultipass = (client, variables) =>\n  client.mutate({ mutation, variables })\n\nexport default customerAccessTokenCreateWithMultipass\n","import { Auth } from 'aws-amplify'\nimport customerAccessTokenCreateWithMultipass from './customerAccessTokenCreateWithMultipass'\nimport { getUserSession } from '../utils'\n\nconst multipassTokenFetchURL =\n  process.env.GATSBY_COGNITO_SHOPIFY_MULTIPASS_TOKEN_ENDPOINT\n\nconst fetchCustomerAccessToken = async client => {\n  if (!Auth.user) return null\n  const userSession = await getUserSession()\n  const headers = new Headers()\n  headers.append('Content-Type', 'application/json')\n  headers.append('Authorization', userSession.idToken.jwtToken)\n\n  const multipassFetch = await fetch(multipassTokenFetchURL, {\n    method: 'GET',\n    headers,\n  })\n  const multipassToken = await multipassFetch.json()\n\n  const accessTokenResult = await customerAccessTokenCreateWithMultipass(\n    client,\n    {\n      multipassToken,\n    },\n  )\n\n  const {\n    data: {\n      customerAccessTokenCreateWithMultipass: { customerAccessToken },\n    },\n  } = accessTokenResult\n\n  return customerAccessToken\n}\n\nexport default fetchCustomerAccessToken\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { desktopVw } from '../styles/utils'\n\nimport {\n  Input,\n  TextArea,\n  RatingInput,\n  RadioSelection,\n  Select,\n  RadioGroup,\n  Container,\n} from './FormElements'\n\nimport ModalHeader from './ModalHeader'\nimport Button from './Button'\n\nconst StyledForm = styled.form`\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    min-width: ${desktopVw(720)};\n  }\n`\n\nconst FieldsContainer = styled.div`\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin: 0 -${desktopVw(10)};\n  }\n`\n\nconst StyledContainer = styled(Container)`\n  &.container--radio-selection {\n    + div:not(.container--radio-selection) {\n      margin-top: 32px;\n    }\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: 0 ${desktopVw(10)};\n\n    &.container__half {\n      display: inline-flex;\n      flex-direction: column;\n      width: 50%;\n      box-sizing: border-box;\n    }\n\n    &.container--radio-selection {\n      + div:not(.container--radio-selection) {\n        margin-top: ${desktopVw(36)};\n      }\n    }\n  }\n`\n\nconst SubmitButton = styled(Button)`\n  display: block;\n  font-family: ${props => props.theme.fonts.primary};\n  width: 100%;\n\n  &:disabled {\n    background: ${props => props.theme.colors.greyLighter};\n    cursor: initial;\n    border-color: ${props => props.theme.colors.greyLighter};\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin: 0 auto;\n    margin-top: ${desktopVw(30)};\n    width: auto;\n  }\n`\n\nconst CheckBox = styled.input`\n  &:checked + label {\n    background: ${props => props.theme.colors.primary};\n    color: ${props => props.theme.colors.secondary};\n    border-color: ${props => props.theme.colors.primary};\n  }\n`\n\nconst DefaultAddressContainer = styled.div`\n  margin: auto;\n`\n\nconst Form = ({\n  children,\n  fields,\n  title,\n  register,\n  errors,\n  formValues,\n  handleSubmit,\n  disableSubmit,\n  submitButtonText,\n  loading,\n  defaultAddressCheckbox = false,\n  onCheckboxChange,\n}) => {\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <ModalHeader title={title} />\n      <FieldsContainer>\n        {fields.map((f, i) => {\n          switch (f.__typename) {\n            case 'ContentfulInput':\n              return (\n                <React.Fragment key={f.id}>\n                  {f.type === 'text' && (\n                    <StyledContainer className={!f.width && 'container__half'}>\n                      <Input\n                        placeholder={f.placeholder}\n                        required={f.required}\n                        aria-label={f.label}\n                        name={f.name}\n                        defaultValue={formValues && formValues[f.name]}\n                        type={f.type}\n                        register={register}\n                        errors={errors}\n                        required={f.required === false ? false : true}\n                      />\n                    </StyledContainer>\n                  )}\n                  {f.type === 'textarea' && (\n                    <StyledContainer className={!f.width && 'container__half'}>\n                      <TextArea\n                        name={f.name}\n                        placeholder={f.placeholder}\n                        defaultValue={formValues && formValues[f.name]}\n                        register={register}\n                        errors={errors}\n                        required={f.required}\n                      />\n                    </StyledContainer>\n                  )}\n                </React.Fragment>\n              )\n\n            case 'ContentfulRadio':\n              return (\n                <React.Fragment key={f.id}>\n                  {f.type === 'rating' && (\n                    <StyledContainer>\n                      <RatingInput\n                        name={f.name}\n                        range={f.range}\n                        register={register}\n                        errors={errors}\n                      />\n                    </StyledContainer>\n                  )}\n                  {f.type === 'range' && (\n                    <StyledContainer className='container--radio-selection'>\n                      <RadioSelection\n                        label={f.label}\n                        name={f.name}\n                        range={f.range}\n                        register={register}\n                        errors={errors}\n                        displayValues={f.displayValues}\n                      />\n                    </StyledContainer>\n                  )}\n                  {f.type === 'radio' && (\n                    <StyledContainer>\n                      <RadioGroup\n                        label={f.label}\n                        name={f.name}\n                        options={f.radioOptions}\n                        register={register}\n                        errors={errors}\n                      />\n                    </StyledContainer>\n                  )}\n                </React.Fragment>\n              )\n\n            case 'ContentfulSelect':\n              return (\n                <StyledContainer\n                  key={f.id}\n                  className={!f.width && 'container__half'}\n                >\n                  <Select\n                    label={f.label}\n                    name={f.name}\n                    options={f.options}\n                    register={register}\n                    defaultValue={formValues && formValues[f.name]}\n                    errors={errors}\n                  />\n                </StyledContainer>\n              )\n\n            default:\n              return null\n          }\n        })}\n        {children && <StyledContainer>{children}</StyledContainer>}\n        {defaultAddressCheckbox && ( //TODO: This is not generic enough.\n          <DefaultAddressContainer>\n            <CheckBox\n              type='checkbox'\n              name='Default Address'\n              defaultChecked={false}\n              onChange={onCheckboxChange}\n            />{' '}\n            Set as default address\n          </DefaultAddressContainer>\n        )}\n\n        <SubmitButton\n          black\n          type='submit'\n          loading={loading}\n          disabled={disableSubmit}\n        >\n          {submitButtonText}\n        </SubmitButton>\n      </FieldsContainer>\n    </StyledForm>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport styled from 'styled-components'\nimport { navigate } from '@reach/router'\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\n\n// Styles\nimport { desktopVw } from '../../styles/utils'\n\n// Utils\nimport { getCookie, getLinkPath, logout } from '../../utils'\n\n// Components\nimport TextButton from '../TextButton'\n\nimport DropdownIcon from '../../assets/dropdown.svg'\nimport { useSignoutUser } from '../../hooks/useSignoutUser'\nimport { ANALYTIC_COOKIES } from '../../utils/constants'\n\nconst StyledSidebarNav = styled.div`\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-right: ${desktopVw(80)};\n    width: ${desktopVw(235)};\n  }\n`\nconst SelectWrapper = styled.div`\n  position: relative;\n  margin: 0 0 30px;\n  box-sizing: border-box;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: none;\n  }\n`\n\nconst MobileSelect = styled.select`\n  font-size: 20px;\n  padding: 20px;\n  background: none;\n  width: 100%;\n  -webkit-appearance: none;\n  border-radius: 0;\n  border: none;\n  border-bottom: 1px solid ${props => props.theme.colors.greyLighter};\n`\n\nconst Dropdown = styled(DropdownIcon)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 20px;\n  pointer-events: none;\n`\n\nconst paddingTop = 61\n\nconst Sticky = styled.div`\n  display: none;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: block;\n    position: sticky;\n    top: ${props => desktopVw(props.theme.header.desktop.height + paddingTop)};\n  }\n`\n\nconst WelcomeText = styled.div`\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    position: relative;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-family: ${props => props.theme.fonts.heading};\n    font-size: ${desktopVw(12)};\n    line-height: ${desktopVw(15)};\n    margin-bottom: ${desktopVw(22)};\n    word-break: break-word;\n  }\n`\n\nconst NavWrapper = styled.div`\n  display: none;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    height: 100%;\n    display: block;\n  }\n`\n\nconst Nav = styled.nav`\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: flex;\n    flex-direction: column;\n    width: ${desktopVw(170)};\n    margin-right: ${desktopVw(160)};\n    padding-bottom: ${desktopVw(15)};\n  }\n`\n\nconst NavItem = styled.div`\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(12)};\n    margin-bottom: ${desktopVw(10)};\n  }\n`\n\nconst ContactDetails = styled.div`\n  display: none;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: block;\n    line-height: ${desktopVw(15)};\n    text-transform: uppercase;\n    border-top: 1px solid ${props => props.theme.colors.silver};\n    font-size: ${desktopVw(10)};\n    padding-top: ${desktopVw(15)};\n    margin-bottom: ${desktopVw(14)};\n    width: ${desktopVw(138)};\n  }\n`\n\nconst Logout = styled(TextButton)`\n  font-size: 10px;\n  font-family: ${props => props.theme.fonts.primary};\n  color: ${props => props.theme.colors.greyLight};\n  text-transform: uppercase;\n  cursor: pointer;\n  background-image: ${props =>\n    `linear-gradient(${props.theme.colors.greyLight}, ${props.theme.colors.greyLight});`};\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(10)};\n  }\n`\n\nconst SidebarNav = ({ menuList, contact, activeSlug, user }) => {\n  const { signOutUser } = useSignoutUser()\n\n  const handleChange = e => {\n    const { value } = e.target\n\n    if (value === 'logout') {\n      signOutUser()\n    } else navigate(value)\n  }\n\n  return (\n    <StyledSidebarNav>\n      <SelectWrapper>\n        <MobileSelect onChange={e => handleChange(e)} value={`/${activeSlug}`}>\n          {menuList.map(menuItem => (\n            <option key={menuItem.id} value={getLinkPath(menuItem)}>\n              {menuItem.text}\n            </option>\n          ))}\n          <option value='logout'>Logout</option>\n        </MobileSelect>\n        <Dropdown />\n      </SelectWrapper>\n      <Sticky>\n        <WelcomeText>\n          Hi <br /> {`${user.name}!`}\n        </WelcomeText>\n        <NavWrapper>\n          <Nav>\n            {menuList.map(menuItem => (\n              <NavItem key={menuItem.id}>\n                <TextButton\n                  to={getLinkPath(menuItem)}\n                  active={`/${activeSlug}` === getLinkPath(menuItem)}\n                >\n                  {menuItem.text}\n                </TextButton>\n              </NavItem>\n            ))}\n          </Nav>\n          <ContactDetails>\n            {documentToReactComponents(contact.json)}\n          </ContactDetails>\n          <Logout\n            onClick={signOutUser}\n            trackParams={{\n              trackInternal: true,\n              category: 'login',\n              action: 'account_logout',\n              context: {\n                login_email: user.email,\n                lb_user_id: getCookie(ANALYTIC_COOKIES.LB_USER_ID),\n              },\n            }}\n          >\n            Logout\n          </Logout>\n        </NavWrapper>\n      </Sticky>\n    </StyledSidebarNav>\n  )\n}\n\nexport default SidebarNav\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Image from 'gatsby-image'\n\nimport { navigate } from '@reach/router'\n\nimport { desktopVw } from '../../styles/utils'\nimport { getCurrentUser, isLoggedIn } from '../../utils/auth'\n\nimport SidebarNav from './SidebarNav'\n\nconst StyledAccountWrapper = styled.div``\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 80px;\n  margin-bottom: -30px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-top: -${props => desktopVw(props.theme.header.desktop.height + 2)};\n    height: ${desktopVw(77)};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst Container = styled.div`\n  position: relative;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: flex;\n    padding: ${desktopVw(61)} ${desktopVw(80)} ${desktopVw(120)}\n      ${desktopVw(80)};\n  }\n`\n\nconst WelcomeText = styled.div`\n  position: absolute;\n  left: 20px;\n  bottom: 32px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 30px;\n  font-family: ${props => props.theme.fonts.heading};\n  word-break: break-word;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: none;\n  }\n`\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: block;\n  }\n`\n\nconst AccountWrapper = ({ children, heroImage, menu, contact, activeSlug }) => {\n  useEffect(() => {\n    if (!isLoggedIn()) {\n      navigate(`/log-in?redirecturi=${window.location.href}`)\n    }\n  }, [])\n\n  const user = getCurrentUser()\n\n  return (\n    <StyledAccountWrapper>\n      <Wrapper>\n        <WelcomeText>{`Hi ${user.name}!`}</WelcomeText>\n      </Wrapper>\n      <Container>\n        <SidebarNav\n          menuList={menu}\n          contact={contact}\n          activeSlug={activeSlug}\n          user={user}\n        />\n        <ContentWrapper>{children}</ContentWrapper>\n      </Container>\n    </StyledAccountWrapper>\n  )\n}\n\nexport default AccountWrapper\n","import { gql } from '@apollo/client'\n\nconst mutation = gql`\n  mutation customerAddressCreate(\n    $customerAccessToken: String!\n    $address: MailingAddressInput!\n  ) {\n    customerAddressCreate(\n      customerAccessToken: $customerAccessToken\n      address: $address\n    ) {\n      customerAddress {\n        id\n      }\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`\n\n/**\n * https://help.shopify.com/en/api/storefront-api/reference/mutation/checkoutcreate\n *\n * @param {{input: CheckoutCreateInput}} variables\n */\nconst customerAddressCreate = (client, variables) =>\n  client.mutate({ mutation, variables })\n\nexport default customerAddressCreate\n","import { gql } from '@apollo/client'\n\nconst mutation = gql`\n  mutation customerAddressDelete($id: ID!, $customerAccessToken: String!) {\n    customerAddressDelete(id: $id, customerAccessToken: $customerAccessToken) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n      deletedCustomerAddressId\n    }\n  }\n`\nconst customerAddressDelete = (client, variables) =>\n  client.mutate({ mutation, variables })\n\nexport default customerAddressDelete\n","import { gql } from '@apollo/client'\n\nconst mutation = gql`\n  mutation customerAddressUpdate(\n    $customerAccessToken: String!\n    $id: ID!\n    $address: MailingAddressInput!\n  ) {\n    customerAddressUpdate(\n      customerAccessToken: $customerAccessToken\n      id: $id\n      address: $address\n    ) {\n      customerAddress {\n        id\n      }\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`\n\nconst customerAddressUpdate = (client, variables) =>\n  client.mutate({ mutation, variables })\n\nexport default customerAddressUpdate\n","import { gql } from '@apollo/client'\n\nconst mutation = gql`\n  mutation customerDefaultAddressUpdate(\n    $customerAccessToken: String!\n    $addressId: ID!\n  ) {\n    customerDefaultAddressUpdate(\n      customerAccessToken: $customerAccessToken\n      addressId: $addressId\n    ) {\n      customer {\n        id\n      }\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`\n\nconst customerDefaultAddressUpdate = (client, variables) =>\n  client.mutate({ mutation, variables })\n\nexport default customerDefaultAddressUpdate\n","import { useContext, useState } from 'react'\nimport { StoreContext } from '../contexts'\nimport { loadState } from '../utils/localStorage'\nimport customerAddressCreate from '../shopify/customerAddressCreate'\nimport customerAddressDelete from '../shopify/customerAddressDelete'\nimport customerAddressUpdate from '../shopify/customerAddressUpdate'\nimport customerDefaultAddressUpdate from '../shopify/customerDefaultAddressUpdate'\nimport { captureException } from '../components/Sentry/utils'\n\nconst useCustomerAddress = () => {\n  const stores = useContext(StoreContext)\n  const customerAccessToken = loadState('customerAccessToken')\n\n  const createAddress = async address => {\n    try {\n      const addressResponse = await customerAddressCreate(\n        stores.lastbrand.client,\n        {\n          address,\n          customerAccessToken: customerAccessToken.accessToken,\n        },\n      )\n      return { response: addressResponse, error: null, loading: false }\n    } catch (error) {\n      captureException(\n        error,\n        { ...address, customerAccessToken: customerAccessToken.accessToken },\n        {\n          API: 'customerAddressCreate',\n          type: 'API_FAILURE',\n        },\n      )\n      return { response: null, error, loading: false }\n    }\n  }\n\n  const deleteAddress = async id => {\n    try {\n      const addressResponse = await customerAddressDelete(\n        stores.lastbrand.client,\n        {\n          id,\n          customerAccessToken: customerAccessToken.accessToken,\n        },\n      )\n      return { response: addressResponse, error: null, loading: false }\n    } catch (error) {\n      captureException(\n        error,\n        { addressId: id, customerAccessToken: customerAccessToken.accessToken },\n        {\n          API: 'customerAddressDelete',\n          type: 'API_FAILURE',\n        },\n      )\n      return { response: null, error, loading: false }\n    }\n  }\n\n  const updateAddress = async (id, address) => {\n    try {\n      const addressResponse = await customerAddressUpdate(\n        stores.lastbrand.client,\n        {\n          id,\n          address,\n          customerAccessToken: customerAccessToken.accessToken,\n        },\n      )\n      return { response: addressResponse, error: null, loading: false }\n    } catch (error) {\n      captureException(\n        error,\n        {\n          addressId: id,\n          customerAccessToken: customerAccessToken.accessToken,\n          ...address,\n        },\n        {\n          API: 'customerAddressUpdate',\n          type: 'API_FAILURE',\n        },\n      )\n      return { response: null, error, loading: false }\n    }\n  }\n\n  const updateDefaultAddress = async addressId => {\n    try {\n      const addressResponse = await customerDefaultAddressUpdate(\n        stores.lastbrand.client,\n        {\n          addressId,\n          customerAccessToken: customerAccessToken.accessToken,\n        },\n      )\n      return { response: addressResponse, error: null, loading: false }\n    } catch (error) {\n      captureException(\n        error,\n        { addressId, customerAccessToken: customerAccessToken.accessToken },\n        {\n          API: 'customerDefaultAddressUpdate',\n          type: 'API_FAILURE',\n        },\n      )\n      return { response: null, error, loading: false }\n    }\n  }\n\n  return { createAddress, deleteAddress, updateAddress, updateDefaultAddress }\n}\n\nexport default useCustomerAddress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useForm } from 'react-hook-form'\nimport { getCurrentUser } from '../../utils/auth'\n\n// Styles\nimport { desktopVw } from '../../styles/utils'\n\nimport Modal from '../Modal'\n\nimport Form from '../Form'\nimport useCustomerAddress from '../../hooks/useCustomerAddress'\nimport { captureException } from '../Sentry/utils'\n\nconst StyledModal = styled(Modal)`\n  position: relative;\n  overflow-y: scroll;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 25px 20px 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: ${desktopVw(53)} ${desktopVw(80)} ${desktopVw(77)};\n    height: auto;\n    max-height: 90vh;\n    width: auto;\n    max-width: ${desktopVw(880)};\n    box-sizing: border-box;\n  }\n`\n\nconst ErrorMsg = styled.p`\n  font-family: ${props => props.theme.fonts.primary};\n  font-size: 14px;\n  margin: 10px 0 0;\n  margin-bottom: 0 !important;\n  color: red;\n  text-align: center;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin: ${desktopVw(10)} 0 0;\n    font-size: ${desktopVw(14)};\n  }\n`\n\nconst AddressModal = ({\n  open,\n  closeModal,\n  addressForm,\n  refreshCustomerAddress,\n  initialFormData,\n  mode,\n  id,\n}) => {\n  const { register, handleSubmit, errors, getValues } = useForm({\n    defaultValues: initialFormData,\n  })\n\n  const formValues = getValues()\n\n  const [isError, setIsError] = useState(false)\n  const [errorMsg, setErrorMsg] = useState('')\n  const [defaultAddressErrorMsg, setDefaultAddressErrorMsg] = useState('')\n  const [isDefaultAddressError, setIsDefaultAddressError] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [defaultAddress, setDefaultAddress] = useState(false)\n  const { email } = getCurrentUser()\n  const defaultAddressMsg =\n    'Address successfully updated. But, making it a default address failed. Please try again.'\n\n  const {\n    createAddress,\n    updateAddress,\n    updateDefaultAddress,\n  } = useCustomerAddress()\n\n  const defaultAddressResponseHandler = ({ response, error, loading }) => {\n    if (response) {\n      const { data } = response\n      const errors = data.customerDefaultAddressUpdate.customerUserErrors\n\n      setLoading(false)\n\n      if (errors.length === 0) {\n        closeModal()\n        refreshCustomerAddress()\n      } else {\n        setIsDefaultAddressError(true)\n        setDefaultAddressErrorMsg(defaultAddressMsg)\n        captureException(\n          new Error(`${defaultAddressMsg} Error: ${JSON.stringify(errors)}`),\n        )\n      }\n    } else if (error) {\n      setIsDefaultAddressError(true)\n      setDefaultAddressErrorMsg(defaultAddressMsg)\n      captureException(new Error(`${defaultAddressMsg} Error: ${error}`))\n    }\n  }\n\n  const responseHandler = ({ response, error, loading }) => {\n    if (response) {\n      const { data } = response\n      const errors =\n        mode === 'add'\n          ? data.customerAddressCreate.customerUserErrors\n          : data.customerAddressUpdate.customerUserErrors\n\n      if (errors.length == 0) {\n        const addressId =\n          mode === 'add'\n            ? data.customerAddressCreate.customerAddress.id\n            : data.customerAddressUpdate.customerAddress.id\n\n        setIsError(false)\n        setIsDefaultAddressError(false)\n        setErrorMsg('')\n        setDefaultAddressErrorMsg('')\n\n        if (defaultAddress) {\n          updateDefaultAddress(addressId).then(defaultAddressResponseHandler)\n        } else {\n          setLoading(false)\n          closeModal()\n          refreshCustomerAddress()\n        }\n      } else {\n        setLoading(false)\n        setIsError(true)\n        setErrorMsg(errors[0].message)\n        captureException(new Error(`${errors[0].message} E-mail: ${email}`))\n      }\n    } else if (error) {\n      setLoading(false)\n      setIsError(true)\n      setErrorMsg(\n        `Error occurred while ${\n          mode === 'add' ? 'adding' : 'updating'\n        } address. Please try again.`,\n      )\n      captureException(\n        new Error(\n          `Error occurred while adding/updating address. Error: ${error}`,\n        ),\n      )\n    }\n  }\n\n  const onSubmit = data => {\n    setLoading(true)\n\n    if (mode === 'add') {\n      createAddress({ ...data }).then(responseHandler)\n    } else if (mode === 'edit') {\n      updateAddress(id, { ...data }).then(responseHandler)\n    }\n  }\n\n  const onDefaultAddressChange = e => {\n    setDefaultAddress(e.target.checked)\n  }\n\n  return (\n    <StyledModal open={open} onClose={closeModal}>\n      <Form\n        fields={addressForm.contentfulfields}\n        title={addressForm.title}\n        submitButtonText={\n          mode === 'add' ? 'Add a new address' : 'Update address'\n        }\n        handleSubmit={handleSubmit(onSubmit)}\n        // disableSubmit={disableSubmit}\n        register={register}\n        formValues={formValues}\n        errors={errors}\n        loading={loading}\n        defaultAddressCheckbox\n        onCheckboxChange={onDefaultAddressChange}\n      />\n      {errorMsg && <ErrorMsg>{errorMsg}</ErrorMsg>}\n      {isDefaultAddressError && <ErrorMsg>{defaultAddressErrorMsg}</ErrorMsg>}\n    </StyledModal>\n  )\n}\n\nexport default AddressModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { desktopVw } from '../../styles/utils'\n\nimport TextButton from '../TextButton'\nimport useCustomerAddress from '../../hooks/useCustomerAddress'\nimport AddressModal from '../../components/Account/AddressModal'\nimport { last } from 'ramda'\n\nconst StyledAddress = styled.div`\n  font-size: 14px;\n  line-height: 25px;\n\n  div:first-child {\n    font-weight: 500;\n    margin-bottom: 20px;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(14)};\n    line-height: ${desktopVw(28)};\n  }\n`\n\nconst AddressLine = styled.div`\n  font-size: 14px;\n  line-height: 25px;\n\n  :first-child {\n    font-weight: 500;\n    margin-bottom: 20px;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(14)};\n    line-height: ${desktopVw(28)};\n  }\n`\n\nconst Buttons = styled.div`\n  width: 100%;\n  height: 20px;\n  display: flex;\n  flex: 1;\n  margin: 18px 0 22px 0;\n`\n\nconst StyledTextButton = styled(TextButton)`\n  margin-right: 10px;\n  font-size: 10px;\n  color: ${props => props.theme.colors.greyLight};\n  text-transform: uppercase;\n\n  background-image: ${props =>\n    `linear-gradient(${props.theme.colors.greyLight}, ${\n      props.theme.colors.greyLight\n    });`};\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(10)};\n    margin-right: ${desktopVw(10)};\n    display: block;\n  }\n`\n\nconst ErrorMsg = styled.p`\n  font-family: ${props => props.theme.fonts.primary};\n  font-size: 14px;\n  margin-bottom: 0 !important;\n  color: red;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin: ${desktopVw(10)} 0 0;\n    font-size: ${desktopVw(14)};\n  }\n`\n\nconst Address = ({\n  id,\n  title,\n  name,\n  firstName,\n  lastName,\n  address1,\n  address2,\n  city,\n  provinceCode,\n  province,\n  phone,\n  company,\n  zip,\n  country,\n  refreshCustomerAddress,\n  addressForm,\n}) => {\n  const [isError, setIsError] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [formData, setFormData] = useState({\n    firstName: firstName,\n    lastName: lastName,\n    address1: address1,\n    address2: address2,\n    province: province,\n    zip: zip,\n    country: country,\n    company: company,\n    phone: phone,\n    city: city,\n  })\n\n  const { deleteAddress } = useCustomerAddress()\n\n  const handleEdit = () => {\n    setModalOpen(true)\n  }\n\n  const handleDelete = () => {\n    const confirmDelete = window.confirm(\n      'Are you sure you wish to delete this address?',\n    )\n    if (confirmDelete === true) {\n      deleteAddress(id).then(({ response, error, loading }) => {\n        if (response) {\n          const data = response.data\n          const errors = data.customerAddressDelete.customerUserErrors\n\n          if (errors.length === 0) {\n            setIsError(false)\n            refreshCustomerAddress()\n          } else {\n            setIsError(true)\n          }\n        } else if (error) {\n          setIsError(true)\n        }\n      })\n    }\n  }\n\n  return (\n    <>\n      <StyledAddress>\n        <AddressLine>{title}</AddressLine>\n        <AddressLine>{name}</AddressLine>\n        {company && <AddressLine>{company}</AddressLine>}\n        <AddressLine>{address1}</AddressLine>\n        {address2 && <AddressLine>{address2}</AddressLine>}\n        <AddressLine>{`${city} ${provinceCode} ${zip}`}</AddressLine>\n        <AddressLine>{country}</AddressLine>\n        <AddressLine>{phone}</AddressLine>\n        <Buttons>\n          <StyledTextButton onClick={handleEdit}>Edit</StyledTextButton>\n          <StyledTextButton onClick={handleDelete}>Delete</StyledTextButton>\n        </Buttons>\n        {isError && (\n          <ErrorMsg>There is an error in deleting this address.</ErrorMsg>\n        )}\n      </StyledAddress>\n      <AddressModal\n        open={modalOpen}\n        closeModal={() => setModalOpen(false)}\n        addressForm={addressForm}\n        refreshCustomerAddress={refreshCustomerAddress}\n        initialFormData={formData}\n        mode={'edit'}\n        id={id}\n      />\n    </>\n  )\n}\n\nexport default Address\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\n\n// Styles\nimport { desktopVw } from '../../styles/utils'\n\nimport useCustomer from '../../hooks/useCustomer'\n\n// Components\nimport AccountWrapper from '../../components/Account/AccountWrapper'\nimport PageHeader from '../../components/Account/PageHeader'\nimport Button from '../../components/Button'\nimport AddressModal from '../../components/Account/AddressModal'\n\nimport Address from '../../components/Account/Address'\n\nconst Container = styled.div`\n  width: 100%;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: block;\n  }\n`\n\nconst Addresses = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  padding: 0 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: block;\n    padding: 0;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  padding: 22px;\n  margin: 20px 0;\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.secondary};\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    box-sizing: border-box;\n    font-size: ${desktopVw(20)};\n    padding: ${desktopVw(22)};\n    width: ${desktopVw(319)};\n    margin-top: ${desktopVw(10)};\n  }\n`\n\nconst AddressList = styled.ul`\n  display: inline-block;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: flex;\n    flex-flow: wrap;\n    margin-top: ${desktopVw(60)};\n  }\n`\n\nconst AddressItem = styled.li`\n  border-bottom: 1px solid ${props => props.theme.colors.greyLight};\n  font-family: ${props => props.theme.fonts.primary};\n  margin: 22px 0 0;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    width: ${desktopVw(239)};\n    margin: 0 ${desktopVw(40)} ${desktopVw(40)} 0;\n    border-right: 1px solid ${props => props.theme.colors.greyLight};\n    border-bottom: none;\n  }\n`\n\nconst MyProfile = ({ data }) => {\n  const page = data.contentfulAccountPage\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const [customerData, setCustomerData] = useState(null)\n  const { customer, refreshCustomer } = useCustomer()\n\n  useEffect(() => {\n    if (customer) {\n      setCustomerData(customer)\n    } else {\n      setCustomerData(null)\n    }\n  }, [customer])\n\n  const refreshCustomerAddress = () => {\n    refreshCustomer()\n  }\n\n  return (\n    <AccountWrapper\n      heroImage={page.hero}\n      menu={page.menuList}\n      contact={page.contact}\n      activeSlug={page.slug}\n    >\n      <PageHeader title={page.title.title} text={page.text.text} />\n\n      <Container>\n        <Addresses>\n          <StyledButton onClick={() => setModalOpen(true)}>\n            Add a new address\n          </StyledButton>\n          <AddressList>\n            {customerData && customerData.defaultAddress && (\n              <AddressItem>\n                <Address\n                  title='Default address'\n                  name={customerData.defaultAddress.name}\n                  firstName={customerData.defaultAddress.firstName}\n                  lastName={customerData.defaultAddress.lastName}\n                  address1={customerData.defaultAddress.address1}\n                  address2={customerData.defaultAddress.address2}\n                  city={customerData.defaultAddress.city}\n                  zip={customerData.defaultAddress.zip}\n                  provinceCode={customerData.defaultAddress.provinceCode}\n                  province={customerData.defaultAddress.province}\n                  phone={customerData.defaultAddress.phone}\n                  company={customerData.defaultAddress.company}\n                  country={customerData.defaultAddress.country}\n                  id={customerData.defaultAddress.id}\n                  refreshCustomerAddress={refreshCustomerAddress}\n                  addressForm={page.addAddressForm}\n                />\n              </AddressItem>\n            )}\n            {customerData &&\n              customerData.addresses.edges.map(\n                (\n                  {\n                    node: {\n                      id,\n                      name,\n                      firstName,\n                      lastName,\n                      address1,\n                      address2,\n                      city,\n                      provinceCode,\n                      province,\n                      zip,\n                      country,\n                      phone,\n                      company,\n                    },\n                  },\n                  i,\n                ) => (\n                  <AddressItem key={id}>\n                    <Address\n                      title={`Address ${i + 1}`}\n                      name={name}\n                      firstName={firstName}\n                      lastName={lastName}\n                      address1={address1}\n                      address2={address2}\n                      city={city}\n                      provinceCode={provinceCode}\n                      province={province}\n                      phone={phone}\n                      company={company}\n                      zip={zip}\n                      country={country}\n                      id={id}\n                      refreshCustomerAddress={refreshCustomerAddress}\n                      addressForm={page.addAddressForm}\n                    />\n                  </AddressItem>\n                ),\n              )}\n          </AddressList>\n        </Addresses>\n      </Container>\n      <AddressModal\n        open={modalOpen}\n        closeModal={() => setModalOpen(false)}\n        addressForm={page.addAddressForm}\n        refreshCustomerAddress={refreshCustomerAddress}\n        initialFormData={{}}\n        mode='add'\n        id={null}\n      />\n    </AccountWrapper>\n  )\n}\n\nexport default MyProfile\n\nexport const MyProfileQuery = graphql`\n  query MyProfile($id: String!) {\n    contentfulAccountPage(id: { eq: $id }) {\n      id\n      slug\n      title {\n        title\n      }\n      pageType\n      hero {\n        fluid(maxWidth: 3840) {\n          ...GatsbyContentfulFluid_withWebp\n        }\n      }\n      menuList {\n        ...Link\n      }\n      text {\n        text\n      }\n      contact {\n        json\n      }\n      addAddressForm {\n        title\n        submitButtonText\n        successMessage {\n          json\n        }\n        contentfulfields {\n          ... on ContentfulInput {\n            id\n            name\n            label\n            placeholder\n            type\n            width\n            required\n          }\n          ... on ContentfulRadio {\n            id\n            type\n            name\n            label\n            range\n            radioOptions {\n              name\n              value\n            }\n          }\n          ... on ContentfulSelect {\n            id\n            name\n            label\n            options\n            width\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { desktopVw } from '../../styles/utils'\n\nconst StyledPageHeader = styled.div`\n  padding: 0 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: 0;\n    margin-bottom: ${desktopVw(45)};\n  }\n`\n\nconst Title = styled.h1`\n  display: none;\n  margin: 0 0 8px;\n  font-size: 40px;\n  line-height: 45px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: block;\n    white-space: pre-wrap;\n    margin: 0 0 ${desktopVw(17)};\n    border-bottom: none;\n    font-family: ${props => props.theme.fonts.heading};\n    font-size: ${desktopVw(40)};\n    line-height: ${desktopVw(45)};\n    font-weight: 500;\n    padding: 0;\n  }\n`\nconst Text = styled.p`\n  margin: 0 0 34px;\n  font-size: 12px;\n  line-height: 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin: 0;\n    font-size: ${desktopVw(12)};\n    font-weight: normal;\n    line-height: ${desktopVw(20)};\n    width: ${desktopVw(480)};\n  }\n`\n\nconst PageHeader = ({ className, title, text }) => {\n  return (\n    <StyledPageHeader className={className}>\n      <Title>{title}</Title>\n      <Text>{text}</Text>\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader\n","import { gql } from '@apollo/client'\n\nconst query = gql`\n  query ShopifyCustomer($customerAccessToken: String!) {\n    customer(customerAccessToken: $customerAccessToken) {\n      id\n      addresses(first: 250) {\n        edges {\n          node {\n            id\n            address1\n            address2\n            country\n            city\n            province\n            provinceCode\n            zip\n            company\n            name\n            phone\n            firstName\n            lastName\n          }\n        }\n      }\n      defaultAddress {\n        id\n        address1\n        address2\n        country\n        city\n        province\n        provinceCode\n        zip\n        company\n        name\n        phone\n        firstName\n        lastName\n      }\n    }\n  }\n`\n\n/**\n * https://help.shopify.com/en/api/storefront-api/reference/queryroot\n *\n * @param {{handle: string}} variables\n */\nconst queryShopifyCustomer = (client, variables) =>\n  client.query({ query, variables })\n\nexport default queryShopifyCustomer\n","import { gql } from '@apollo/client'\n\nconst query = gql`\n  query ShopifyCustomer($customerAccessToken: String!) {\n    customer(customerAccessToken: $customerAccessToken) {\n      id\n      addresses(first: 250) {\n        edges {\n          node {\n            id\n            address1\n            address2\n            country\n            city\n            province\n            provinceCode\n            zip\n            company\n            name\n            phone\n            firstName\n            lastName\n          }\n        }\n      }\n      defaultAddress {\n        id\n        address1\n        address2\n        country\n        city\n        province\n        provinceCode\n        zip\n        company\n        name\n        phone\n        firstName\n        lastName\n      }\n    }\n  }\n`\n\n/**\n *\n * NOTE: Separate from queryShopifyCustomer - Because of no-cache policy\n *\n * */\nconst queryShopifyLatestCustomer = (client, variables) =>\n  client.query({ query, variables, fetchPolicy: 'no-cache' })\n\nexport default queryShopifyLatestCustomer\n","import fetchCustomerAccessToken from './fetchCustomerAccessToken'\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst saveCustomerAccessToken = saveState('customerAccessToken')\n\nconst loadCustomerAccessToken = async client => {\n  const customerAccessToken = loadState('customerAccessToken')\n  if (\n    !customerAccessToken ||\n    Date.parse(customerAccessToken.expiresAt) < new Date()\n  ) {\n    console.log('fetching accessToken')\n    const newAccessToken = await fetchCustomerAccessToken(client)\n\n    if (newAccessToken != null) {\n      saveCustomerAccessToken(newAccessToken)\n    }\n\n    return newAccessToken\n  }\n  return customerAccessToken\n}\n\nexport default loadCustomerAccessToken\n","import { useState, useEffect, useContext } from 'react'\n\n// Shopify\nimport queryShopifyCustomer from '../shopify/queryCustomer'\nimport queryShopifyLatestCustomer from '../shopify/queryLatestCustomer'\n\n// Context\nimport { StoreContext } from '../contexts'\n\n// Utils\nimport loadCustomerAccessToken from '../shopify/loadCustomerAccessToken'\n\nconst useCustomer = () => {\n  const stores = useContext(StoreContext)\n  const [customer, setCustomer] = useState(null)\n  const [refreshCustomerData, setRefreshCustomerData] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const getCustomer = async () => {\n    setLoading(true)\n    const customerAccessToken = await loadCustomerAccessToken(\n      stores.lastbrand.client,\n    )\n    const { data } = await queryShopifyCustomer(stores.lastbrand.client, {\n      customerAccessToken: customerAccessToken.accessToken,\n    })\n    setCustomer(data.customer)\n    setLoading(false)\n  }\n\n  const getLatestCustomer = async () => {\n    const customerAccessToken = await loadCustomerAccessToken(\n      stores.lastbrand.client,\n    )\n    const { data } = await queryShopifyLatestCustomer(stores.lastbrand.client, {\n      customerAccessToken: customerAccessToken.accessToken,\n    })\n    setCustomer(data.customer)\n  }\n\n  const refreshCustomer = () => {\n    getLatestCustomer()\n    setRefreshCustomerData(true)\n  }\n\n  useEffect(() => {\n    async function checkRefreshCustomer() {\n      const customerAccessToken = await loadCustomerAccessToken(\n        stores.lastbrand.client,\n      )\n      if (customerAccessToken && !refreshCustomerData) {\n        getCustomer()\n      } else if (!refreshCustomerData) {\n        setCustomer(null)\n      }\n    }\n\n    checkRefreshCustomer()\n  }, [refreshCustomerData])\n\n  return { customer, refreshCustomer, loading }\n}\n\nexport default useCustomer\n"],"sourceRoot":""}