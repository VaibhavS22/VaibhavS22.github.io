{"version":3,"sources":["webpack:///./src/hooks/useDebounce.js","webpack:///./src/components/ProductGrid.js","webpack:///./src/templates/Wishlist.js","webpack:///./src/hooks/useFetchInventoryTag.js","webpack:///./src/components/PageLoader.js"],"names":["useDebounce","value","timeout","useState","state","setState","useEffect","handler","setTimeout","clearTimeout","StyledProductGrid","styled","div","props","theme","breakpoints","desktopSmall","desktopVw","ProductItem","li","mobileVw","tablet","tabletVw","Products","ul","splitProductsByColor","products","metaProducts","prefetchColor","handleColorAdd","product","productColor","colors","productImages","filter","pi","color","name","length","push","c","find","p","forEach","tags","t","InventoryTag","BACK_IN_STOCK","LOW_STOCK","SOLD_OUT","includes","i","ProductGrid","className","tracker","animationDelay","applyDebounce","colorsToProducts","setColorsToProducts","enrichProductsByColorWithInventoryTag","useFetchInventoryTag","didMount","useRef","current","updatedColorsToProducts","then","productRows","map","colorsToProduct","count","key","id","initialDelay","ProductThumbnail","title","shopifyProduct","contentfulProduct","staticPrice","variants","edges","node","price","undefined","prefetchedColor","offsetMobile","header","mobile","height","announcementBar","offsetDesktop","desktop","StyledWishList","section","Header","Title","h1","fonts","secondary","EmptyWishList","RichText","primary","Wishlist","data","page","contentfulPage","entryTitle","placeholder","welcomePopupData","welcomePopup","nodes","category","useSelector","wishlist","isFetchingWishlist","isFetching","emptyWishlist","setEmptyWishlist","wishlistCount","wishlistProduct","wishlistId","seoTitle","description","seoDescription","type","pageType","slug","image","metaImage","fluid","src","heading","subHeading","klaviyoListId","subscribeForm","successMessage","json","colorTheme","Math","round","random","subscriptionType","WishlistQuery","InventoryTagGranularity","fetchInventoryTagsForBatch","tagGranularity","productList","a","queryParams","productIds","Set","productId","variantIds","variantId","productIdColors","join","url","process","getPathParams","fetch","method","productInventoryTags","setproductInventoryTags","fetchInventoryTag","promises","j","batchProductList","slice","inventoryTagMap","Promise","all","Object","assign","productsByColor","uniqProductsByColor","uniqueElementsBy","cp1","cp2","productIdColorsList","reduce","acc","cp","allColorsProductIdMap","decodeIdFromGraphQLResponse","product_id","productIdColorInventoryTagMap","productListInventoryTagMap","currValue","productColorKey","prevState","productToColorsTagsMap","productTags","tagKey","updatedTags","inventoryTag","unshift","LoadingContainer","rotate","keyframes","Loader","greyLighter","greyLight","PageLoader"],"mappings":"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","file":"component---src-templates-wishlist-js-9eab709be4344474f6a9.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst useDebounce = (value, timeout) => {\n  const [state, setState] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => setState(value), timeout)\n    return () => clearTimeout(handler)\n  }, [value, timeout])\n\n  return state\n}\n\nexport default useDebounce\n","import React, { useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport { desktopVw, mobileVw, tabletVw } from '../styles/utils'\n\nimport ProductThumbnail from './ProductThumbnail'\nimport useFetchInventoryTag, {\n  InventoryTag,\n} from '../hooks/useFetchInventoryTag'\nimport useDebounce from '../hooks/useDebounce'\n\nconst StyledProductGrid = styled.div`\n  position: relative;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-bottom: ${desktopVw(92)};\n    padding: 0 ${desktopVw(80)};\n  }\n`\n\nconst ProductItem = styled.li`\n  width: calc(50% - 10px);\n  margin: 0 0 25px;\n  padding: 0 5px;\n  opacity: 1;\n  transform: translateY(0);\n\n  .product-thumbnail__image-wrapper {\n    height: ${mobileVw(212)};\n    width: 100%;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}px) {\n    .product-thumbnail__image-wrapper {\n      height: ${tabletVw(450)};\n    }\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    width: calc(25% - (1 / 4 * ${desktopVw(121)}));\n    margin: 0 ${desktopVw(40)} ${desktopVw(43)} 0;\n    padding: 0;\n\n    .product-thumbnail {\n      &__image-wrapper {\n        height: ${desktopVw(357.4)};\n      }\n    }\n  }\n`\n\nconst Products = styled.ul`\n  display: flex;\n  flex-flow: wrap;\n  padding: 0 5px;\n\n  ${ProductItem} {\n    &:nth-child(5n) {\n      width: calc(100% + 10px);\n      margin: 0 -5px 18px;\n      padding: 0;\n\n      .product-thumbnail {\n        &__image-wrapper {\n          height: 437px;\n        }\n\n        &__footer {\n          padding: 0 10px;\n        }\n      }\n    }\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: 0;\n\n    ${ProductItem} {\n      &:nth-child(5n) {\n        width: calc(25% - (1 / 4 * ${desktopVw(121)}));\n        margin: 0 ${desktopVw(40)} ${desktopVw(43)} 0;\n\n        .product-thumbnail {\n          &__image-wrapper {\n            height: ${desktopVw(357.4)};\n          }\n\n          &__footer {\n            padding: 0;\n          }\n        }\n      }\n\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n`\n\nconst ProductGrid = ({\n  className,\n  products,\n  tracker,\n  animationDelay,\n  applyDebounce = false,\n  metaProducts,\n  prefetchColor = true,\n}) => {\n  const [colorsToProducts, setColorsToProducts] = useState(\n    splitProductsByColor(products, metaProducts, prefetchColor),\n  )\n\n  const { enrichProductsByColorWithInventoryTag } = useFetchInventoryTag()\n\n  useEffect(() => {\n    if (!products || products.length == 0 || !products[0]) return\n\n    setColorsToProducts(\n      splitProductsByColor(products, metaProducts, prefetchColor),\n    )\n  }, [products])\n\n  useEffect(() => {\n    if (!metaProducts || metaProducts.length == 0 || !metaProducts[0]) return\n\n    setColorsToProducts(\n      splitProductsByColor(products, metaProducts, prefetchColor),\n    )\n  }, [metaProducts])\n\n  // This helps knowing if its the first mount call, this helps in ensuring that in case debounce is applied,\n  // we are not making call on did mount action.\n  const didMount = useRef(false)\n\n  // Pulling inventory tags with debounce to avoid multiple calls,\n  // this is needed because of Search that triggers component re-render\n  // multiple time (Roughly 20 times)\n  useEffect(() => {\n    // In case of using debounce, the api calls happens for component did mount and last render,\n    // in order to avoid first call doing this.\n    if (!didMount.current && applyDebounce) {\n      didMount.current = true\n      return\n    }\n    // TODO: Remove this dirty check\n    if (!products || products.length == 0 || !products[0]) {\n      return\n    }\n    const updatedColorsToProducts = splitProductsByColor(\n      products,\n      metaProducts,\n      prefetchColor,\n    )\n    enrichProductsByColorWithInventoryTag(updatedColorsToProducts).then(\n      productRows => {\n        setColorsToProducts(productRows)\n      },\n    )\n  }, [\n    useDebounce(products, applyDebounce ? 1000 : 0),\n    useDebounce(metaProducts, applyDebounce ? 1000 : 0),\n  ])\n\n  return (\n    <StyledProductGrid className={`${className} product-grid`}>\n      <Products className='product-grid__list'>\n        {colorsToProducts.map((colorsToProduct, i) => {\n          const count = i % 18\n          return (\n            <ProductItem\n              key={`${colorsToProduct.p.id}${i}`}\n              className='product-grid__item'\n              count={count}\n              initialDelay={i <= 17 ? 1000 : 500}\n              animationDelay={animationDelay}\n            >\n              <ProductThumbnail\n                title={\n                  colorsToProduct.p.title ||\n                  colorsToProduct.p.shopifyProduct.title\n                }\n                contentfulProduct={colorsToProduct.p}\n                staticPrice={\n                  colorsToProduct.p.shopifyProduct.variants.edges[0].node.price\n                }\n                tracker={tracker ? `${tracker}__${i}` : undefined}\n                prefetchedColor={prefetchColor && colorsToProduct.c}\n              />\n            </ProductItem>\n          )\n        })}\n      </Products>\n    </StyledProductGrid>\n  )\n}\n\nconst splitProductsByColor = (products, metaProducts, prefetchColor) => {\n  const splitProductsByColor = []\n\n  const handleColorAdd = (product, productColor, colors, productImages) => {\n    const colorPresent = product.productImages.filter(\n      pi => pi.color.name === productColor,\n    )\n    if (colorPresent.length > 0) {\n      splitProductsByColor.push({\n        c: colors.find(color => color.name === productColor),\n        p: { ...product }, // Shallow copy to avoid reference updates\n        pi: productImages.filter(pi => pi.color.name === productColor),\n      })\n    } /* Muting this for now as it is possible colors are not added\n      else {\n      captureMessage(\n        `Color ${productColor} does not exist in the product images - ${product.title ||\n          product.shopifyProduct.title}`,\n      )\n    } */\n  }\n\n  if (metaProducts && metaProducts.length > 0) {\n    metaProducts.forEach(({ colors, product }) => {\n      // Removing inventory related tags and fetching them from API.\n      product.tags = (product.tags || []).filter(\n        t =>\n          ![\n            InventoryTag.BACK_IN_STOCK,\n            InventoryTag.LOW_STOCK,\n            InventoryTag.SOLD_OUT,\n          ].includes(t),\n      )\n      if (!prefetchColor)\n        handleColorAdd(product, colors[0].name, colors, product.productImages)\n      else\n        colors.forEach(color => {\n          handleColorAdd(product, color.name, colors, product.productImages)\n        })\n    })\n  } else if (products && products.length > 0) {\n    products.forEach(product => {\n      if (product) {\n        const { color: productColor, colors, productImages } = product\n        if (colors && colors.length > 0) {\n          // Removing inventory related tags and fetching them from API.\n          product.tags = (product.tags || []).filter(\n            t =>\n              ![\n                InventoryTag.BACK_IN_STOCK,\n                InventoryTag.LOW_STOCK,\n                InventoryTag.SOLD_OUT,\n              ].includes(t),\n          )\n          if (!productColor) {\n            if (!prefetchColor) {\n              const colorPresent = product.productImages.filter(\n                pi => pi.color.name === product.colors[0].name,\n              )\n              if (colorPresent.length > 0) {\n                splitProductsByColor.push({\n                  c: product.colors[0],\n                  p: { ...product }, // Shallow copy to avoid reference updates\n                  pi: product.productImages.filter(\n                    pi => pi.color.name === product.colors[0].name,\n                  ),\n                })\n              }\n            } else\n              product.colors.forEach((color, i) => {\n                const colorPresent = product.productImages.filter(\n                  pi => pi.color.name === color.name,\n                )\n                if (colorPresent.length > 0) {\n                  splitProductsByColor.push({\n                    c: color,\n                    p: { ...product }, // Shallow copy to avoid reference updates\n                    pi: product.productImages.filter(\n                      pi => pi.color.name === color.name,\n                    ),\n                  })\n                } /* Muting the sentry capture for now as it is possible colors don't exist\n              else {\n                captureMessage(\n                  `Color ${\n                    color.name\n                  } does not exist in the product images - ${product.title ||\n                    product.shopifyProduct.title}`,\n                )\n              } */\n              })\n          } else {\n            handleColorAdd(product, productColor, colors, productImages)\n          }\n        } /* Muting Sentry capture\n        else {\n          captureMessage(\n            `No Color exists on the product - ${product.title ||\n              product.shopifyProduct.title}`,\n          )\n        } */\n      }\n    })\n  }\n  return splitProductsByColor\n}\n\nexport default ProductGrid\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport { useSelector } from 'react-redux'\n\nimport { desktopVw } from '../styles/utils'\nimport theme from '../styles/theme'\n\nimport SEO from '../components/SEO'\nimport ProductGrid from '../components/ProductGrid'\nimport RichText from '../components/RichText'\nimport WelcomeModal from '../components/WelcomeModal'\nimport { PageLoader } from '../components/PageLoader'\n\nconst offsetMobile =\n  theme.header.mobile.height + theme.announcementBar.mobile.height\n\nconst offsetDesktop =\n  theme.header.desktop.height + theme.announcementBar.desktop.height\n\nconst StyledWishList = styled.section`\n  min-height: calc(100vh - ${offsetMobile}px);\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    min-height: calc(100vh - ${desktopVw(offsetDesktop)});\n  }\n`\n\nconst Header = styled.header`\n  padding: 0 10px;\n  margin: 30px 0;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: 0 ${desktopVw(80)};\n    margin: ${desktopVw(63)} 0 ${desktopVw(48)};\n  }\n`\nconst Title = styled.h1`\n  font-family: ${props => props.theme.fonts.secondary};\n  font-size: 80px;\n  line-height: 70px;\n  letter-spacing: -2%;\n  text-align: center;\n  text-transform: uppercase;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(220)};\n    line-height: ${desktopVw(170)};\n  }\n`\n\nconst EmptyWishList = styled(RichText)`\n  text-align: center;\n  padding: 50px 20px 120px;\n\n  h2 {\n    text-transform: uppercase;\n    font-family: ${props => props.theme.fonts.header};\n    font-size: 18px;\n    line-height: 1;\n    font-weight: 500;\n    margin: 0 0 8px;\n  }\n\n  p {\n    font-family: ${props => props.theme.fonts.primary};\n    font-size: 11px;\n    line-height: 20px;\n    margin: 0;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: ${desktopVw(50)} ${desktopVw(200)} ${desktopVw(120)};\n\n    h2 {\n      font-size: ${desktopVw(30)};\n      margin: 0 0 ${desktopVw(25)};\n    }\n\n    p {\n      font-size: ${desktopVw(16)};\n      line-height: ${desktopVw(25)};\n      max-width: ${desktopVw(470)};\n      margin: 0 auto;\n    }\n  }\n`\n\nconst Wishlist = ({ data }) => {\n  const page = data.contentfulPage\n  const { entryTitle, placeholder } = data.contentfulPage\n  const welcomePopupData = data.welcomePopup.nodes.filter(\n    node => node.category === 'welcomePopup',\n  )[0]\n\n  const { data: wishlist, isFetching: isFetchingWishlist } = useSelector(\n    state => state.wishlist,\n  )\n\n  const [emptyWishlist, setEmptyWishlist] = useState(false)\n\n  useEffect(() => {\n    const wishlistCount = wishlist.filter(\n      wishlistProduct => !!wishlistProduct.wishlistId,\n    ).length\n\n    setEmptyWishlist(wishlistCount <= 0)\n  }, [wishlist])\n\n  return (\n    <>\n      <SEO\n        title={page.seoTitle}\n        description={page.seoDescription}\n        type={page.pageType}\n        slug={page.slug}\n        image={page.metaImage ? page.metaImage.fluid.src : null}\n      />\n      <WelcomeModal\n        heading={welcomePopupData.heading}\n        subHeading={welcomePopupData.subHeading}\n        klaviyoListId={welcomePopupData.subscribeForm.klaviyoListId}\n        successMessage={welcomePopupData.subscribeForm.successMessage.json}\n        colorTheme={Math.round(Math.random())}\n        subscriptionType={\n          'email'\n          /*Math.round(Math.random()) === 0 ? 'email' : 'mobile'*/\n        }\n      />\n\n      {isFetchingWishlist && <PageLoader />}\n\n      {!isFetchingWishlist && (\n        <StyledWishList>\n          <Header>\n            <Title>{entryTitle}</Title>\n          </Header>\n          {!emptyWishlist && <ProductGrid products={wishlist} />}\n          {emptyWishlist && <EmptyWishList json={placeholder.json} />}\n        </StyledWishList>\n      )}\n    </>\n  )\n}\n\nexport default Wishlist\n\nexport const WishlistQuery = graphql`\n  query Wishlist($id: String!) {\n    contentfulPage(id: { eq: $id }) {\n      id\n      entryTitle\n      seoTitle\n      seoDescription\n      slug\n      metaImage {\n        fluid(maxWidth: 1200) {\n          ...GatsbyContentfulFluid_withWebp\n        }\n      }\n      placeholder {\n        json\n      }\n    }\n\n    welcomePopup: allContentfulWelcomePopup {\n      nodes {\n        id\n        heading\n        subHeading\n        category\n        subscribeForm {\n          klaviyoListId\n          successMessage {\n            json\n          }\n        }\n      }\n    }\n  }\n`\n","import { useState } from 'react'\nimport {\n  decodeIdFromGraphQLResponse,\n  getPathParams,\n  uniqueElementsBy,\n} from '../utils'\n\nexport const InventoryTagGranularity = {\n  PRODUCT: 'product',\n  VARIANT: 'variant',\n  PRODUCT_COLOR: 'product_color',\n}\n\nexport const InventoryTag = {\n  BACK_IN_STOCK: 'Back in stock',\n  LOW_STOCK: 'Low Stock',\n  SOLD_OUT: 'Sold Out',\n}\n\nconst fetchInventoryTagsForBatch = async (tagGranularity, productList) => {\n  if (!tagGranularity || !productList || productList.length === 0) {\n    return {}\n  }\n  let queryParams = { tagGranularity }\n  const productIds = [...new Set(productList.map(p => p.productId))]\n  const variantIds = [...new Set(productList.map(p => p.variantId))]\n  const productIdColors = [\n    ...new Set(productList.map(p => `${p.productId}_${p.color}`)),\n  ]\n\n  switch (tagGranularity) {\n    case InventoryTagGranularity.PRODUCT:\n      queryParams = { ...queryParams, productIds: productIds.join(',') }\n      break\n    case InventoryTagGranularity.VARIANT:\n      queryParams = { ...queryParams, variantIds: variantIds.join(',') }\n      break\n    case InventoryTagGranularity.PRODUCT_COLOR:\n      queryParams = {\n        ...queryParams,\n        productIdColors: productIdColors.join(','),\n      }\n      break\n    default:\n      return {}\n  }\n\n  const url = `${\n    process.env.GATSBY_QUINCE_STORE_FRONT_API\n  }/get-product-inventory-tag${getPathParams(queryParams)}`\n\n  return (\n    await fetch(url, {\n      method: 'GET',\n    })\n  ).json()\n}\n\nconst useFetchInventoryTag = () => {\n  const [productInventoryTags, setproductInventoryTags] = useState({})\n\n  const fetchInventoryTag = async ({ tagGranularity, productList }) => {\n    // Calling in a batch of 75 products at a time, to ensure we are not exceeding get URL length limit.\n    const batchSize = 75\n    const promises = []\n    for (let i = 0, j = productList.length; i < j; i += batchSize) {\n      const batchProductList = productList.slice(i, i + batchSize)\n      promises.push(\n        fetchInventoryTagsForBatch(tagGranularity, batchProductList),\n      )\n    }\n    let inventoryTagMap = {}\n    const promiseResults = await Promise.all(promises)\n    promiseResults.forEach(p => {\n      inventoryTagMap = Object.assign(inventoryTagMap, p)\n    })\n    return inventoryTagMap\n  }\n\n  const enrichProductsByColorWithInventoryTag = async productsByColor => {\n    const uniqProductsByColor = uniqueElementsBy(\n      productsByColor,\n      (cp1, cp2) => cp1.p.id === cp2.p.id,\n    )\n\n    const productIdColorsList = uniqProductsByColor\n      .reduce((acc, cp) => {\n        const allColorsProductIdMap = cp.p.colors.map(color => {\n          return {\n            productId: decodeIdFromGraphQLResponse(\n              cp.p.shopifyProduct.product_id,\n            ),\n            color: color.name,\n          }\n        })\n        return [...acc, ...allColorsProductIdMap]\n      }, [])\n      .filter(\n        i => productInventoryTags[`${i.productId}_${i.color}`] === undefined,\n      )\n\n    const productIdColorInventoryTagMap = await fetchInventoryTag({\n      tagGranularity: InventoryTagGranularity.PRODUCT_COLOR,\n      productList: productIdColorsList,\n    })\n    const productListInventoryTagMap = productIdColorsList.reduce(\n      (acc, currValue) => {\n        const productColorKey = `${currValue.productId}_${currValue.color}`\n        return {\n          ...acc,\n          [productColorKey]:\n            productIdColorInventoryTagMap[productColorKey] ?? null,\n        }\n      },\n      {},\n    )\n    setproductInventoryTags(prevState => ({\n      ...prevState,\n      ...productListInventoryTagMap,\n    }))\n    let productToColorsTagsMap = {}\n    uniqProductsByColor.forEach(cp => {\n      let productTags = {}\n      cp.p.colors.forEach(color => {\n        const tagKey = `${decodeIdFromGraphQLResponse(\n          cp.p.shopifyProduct.product_id,\n        )}_${color.name}`\n        const updatedTags = cp.p.tags.filter(\n          t =>\n            ![\n              InventoryTag.BACK_IN_STOCK,\n              InventoryTag.LOW_STOCK,\n              InventoryTag.SOLD_OUT,\n            ].includes(t),\n        )\n        const inventoryTag = productIdColorInventoryTagMap[tagKey]\n        if (inventoryTag) {\n          // give highest priority to inventory tags\n          updatedTags.unshift(inventoryTag)\n        }\n        productTags = { ...productTags, [color.name]: updatedTags }\n      })\n      productToColorsTagsMap = {\n        ...productToColorsTagsMap,\n        [cp.p.shopifyProduct.product_id]: productTags,\n      }\n    })\n    return productsByColor.map(cp => {\n      return {\n        ...cp,\n        p: {\n          ...cp.p,\n          tags:\n            productToColorsTagsMap[cp.p.shopifyProduct.product_id][cp.c.name],\n          productTags: productToColorsTagsMap[cp.p.shopifyProduct.product_id],\n        },\n      }\n    })\n  }\n\n  return { fetchInventoryTag, enrichProductsByColorWithInventoryTag }\n}\n\nexport default useFetchInventoryTag\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { desktopVw, mobileVw } from '../styles/utils'\n\nconst LoadingContainer = styled.div`\n  text-align: center;\n  padding: ${mobileVw(350)} 0;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: ${desktopVw(370)} 0;\n  }\n`\n\nconst rotate = keyframes`\n 0% {\n    transform: rotate(0); }\n  100% {\n    transform: rotate(360deg); }\n `\n\nconst Loader = styled.div`\n  height: 24px;\n  width: 24px;\n  color: ${props => props.theme.colors.greyLighter};\n  display: inline-block;\n  position: relative;\n  border: 3px solid;\n  border-radius: 50%;\n  border-right-color: ${props => props.theme.colors.greyLight};\n  animation: ${rotate} 1s linear infinite;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    height: ${desktopVw(24)};\n    border-width: ${desktopVw(3)};\n    width: ${desktopVw(24)};\n  }\n`\n\nexport function PageLoader({ className }) {\n  return (\n    <LoadingContainer className={className}>\n      <Loader />\n    </LoadingContainer>\n  )\n}\n"],"sourceRoot":""}