{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/templates/Auth/LogIn.js"],"names":["SEO","title","description","type","slug","canonicalUrl","image","schemaData","noindex","nofollow","category","reviewsAndRatings","price","userReviews","reviews","map","review","author","datePublished","dateCreated","body","reviewRating","bestRating","ratingValue","rating","worstRating","name","content","index","property","rel","href","hrefLang","toFixed","averageRating","count","JSON","stringify","currentConfig","Auth","configure","authenticationFlowType","Container","styled","div","props","theme","breakpoints","desktopSmall","desktopVw","StyledButton","Button","colors","primary","secondary","UnVerifiedMessage","fonts","alignCenter","saveState","LogIn","location","data","getRedirectURL","query","redirecturi","queryString","parse","redirectToCheckoutIfApplicable","redirectURL","a","includes","getShopifyLoginURL","loginURL","window","navigate","useEffect","isLoggedIn","search","page","contentfulAuthenticationPage","useForm","register","handleSubmit","errors","loginUser","useLoginUser","useState","serverError","setServerError","unverifiedAccount","setUnverifiedAccount","verificationEmailSent","setVerificationEmailSent","loading","setLoading","email","setEmail","fetchUserWishlist","useWishlist","resendVerificationEmail","resendSignUp","eventTracker","trackClick","EventType","BUTTON_CLICK","trackInternal","action","context","login_email","lb_user_id","getCookie","ANALYTIC_COOKIES","LB_USER_ID","captureException","API","setTimeout","login","username","password","FORM_SUBMIT","code","message","err","seoTitle","seoDescripton","metaImage","fluid","src","onSubmit","id","noValidate","documentToReactComponents","formHeader","json","dangerouslySetInnerHTML","__html","onClick","trackParams","placeholder","required","showForgotPassword","backToLogin","form","buttonText","to","LoginQuery"],"mappings":"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","file":"component---src-templates-auth-log-in-js-692d179b1681b39560dc.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst SEO = ({\n  title,\n  description,\n  type,\n  slug,\n  canonicalUrl,\n  image,\n  noindex,\n  nofollow,\n  schemaData,\n  category,\n  reviewsAndRatings,\n  price,\n}) => {\n  const index =\n    noindex || process.env.GATSBY_BUILD_ENVIRONMENT !== 'production'\n      ? 'noindex'\n      : 'index'\n  const follow =\n    nofollow || process.env.GATSBY_BUILD_ENVIRONMENT !== 'production'\n      ? 'nofollow'\n      : 'follow'\n  const userReviews =\n    schemaData &&\n    reviewsAndRatings &&\n    reviewsAndRatings.reviews.map(review => {\n      return {\n        '@type': 'Review',\n        author: review.author,\n        datePublished: review.dateCreated,\n        description: review.body,\n        reviewRating: {\n          '@type': 'Rating',\n          bestRating: '5',\n          ratingValue: `${review.rating}`,\n          worstRating: '1',\n        },\n      }\n    })\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='robots' content={`${index}, ${follow}`} />\n      <meta name='description' content={description || ''} />\n      <meta property='og:title' content={title || ''} />\n      <meta property='og:type' content={type || ''} />\n      <meta property='og:url' content={`https://www.onequince.com/${slug}`} />\n      <meta property='og:image' content={image && image} />\n      <link\n        rel='alternate'\n        href={`https://www.onequince.com/${slug}`}\n        hrefLang='en-US'\n      />\n      <link\n        rel='canonical'\n        href={canonicalUrl || `https://www.onequince.com/${slug}`}\n      />\n      {schemaData && reviewsAndRatings && (\n        <script type='application/ld+json'>\n          {`{\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"${type}\",\n              \"name\": \"${title}\",\n              \"description\": \"${description}\",\n              \"image\": \"${image}\",\n              \"category\": \"${category}\",\n              \"brand\": \"Quince\",\n              \"offers\": {\n                \"@type\": \"Offer\",\n                \"availability\": \"http://schema.org/InStock\",\n                \"price\": \"${price && price.toFixed(2)}\",\n                \"priceCurrency\": \"USD\"\n              },\n              \"aggregateRating\": {\n                \"@type\" : \"AggregateRating\",\n                \"ratingValue\": \"${reviewsAndRatings.averageRating}\",\n                \"reviewCount\": \"${reviewsAndRatings.count}\"\n              },\n              \"review\": ${JSON.stringify(userReviews)}\n            }`}\n        </script>\n      )}\n      {schemaData && !reviewsAndRatings && (\n        <script type='application/ld+json'>\n          {`{\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"${type}\",\n              \"name\": \"${title}\",\n              \"description\": \"${description}\",\n              \"image\": \"${image}\",\n              \"category\": \"${category}\",\n              \"brand\": \"Quince\",\n              \"offers\": {\n                \"@type\": \"Offer\",\n                \"availability\": \"http://schema.org/InStock\",\n                \"price\": \"${price && price.toFixed(2)}\",\n                \"priceCurrency\": \"USD\"\n              }\n            }`}\n        </script>\n      )}\n    </Helmet>\n  )\n}\n\nexport default SEO\n","import React, { useState, useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { graphql, Link } from 'gatsby'\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\nimport { navigate } from '@reach/router'\nimport { Auth } from 'aws-amplify'\nimport { useForm } from 'react-hook-form'\nimport queryString from 'query-string'\nimport { useDispatch } from 'react-redux'\n\n// Context\nimport { StoreContext } from '../../contexts'\n\n// Styles\nimport { desktopVw } from '../../styles/utils'\n\n// Utils\nimport { saveState } from '../../utils/localStorage'\nimport { setUser, isLoggedIn } from '../../utils/auth'\n\n// Shopify\nimport fetchCustomerAccessToken from '../../shopify/fetchCustomerAccessToken'\nimport getShopifyLoginURL from '../../shopify/getShopifyLoginURL'\n\n// Components\nimport AuthWrapper from '../../components/Auth/AuthWrapper'\nimport FormHeader from '../../components/Auth/FormHeader'\nimport FormFooter from '../../components/Auth/FormFooter'\nimport {\n  Input,\n  Password,\n  BoxStyledErrorMessage,\n} from '../../components/FormElements'\nimport Button from '../../components/Button'\nimport eventTracker from '../../trackers/EventTracker'\nimport EventType from '../../trackers/eventType'\nimport { getCookie } from '../../utils'\nimport SEO from '../../components/SEO'\nimport TrackableLink from '../../components/TrackableLink'\nimport { StyledVerificationMessage } from '../../components/FormElements/StyledVerificationMessage'\nimport { captureException } from '../../components/Sentry/utils'\nimport useLoginUser from '../../hooks/useLoginUser'\nimport { ANALYTIC_COOKIES } from '../../utils/constants'\nimport useWishlist from '../../hooks/useWishlist'\n\nconst currentConfig = Auth.configure()\n\nAuth.configure({\n  // other configurations\n  ...currentConfig,\n  authenticationFlowType: 'USER_PASSWORD_AUTH',\n})\n\nconst Container = styled.div`\n  margin-bottom: 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-bottom: ${desktopVw(20)};\n  }\n`\n\nconst StyledButton = styled(Button)`\n  display: block;\n  width: 100%;\n  background-color: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.secondary};\n  font-size: 20px;\n  padding: 22px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(20)};\n    padding: ${desktopVw(22)};\n  }\n`\n\nconst UnVerifiedMessage = styled(Button)`\n  font-family: ${props => props.theme.fonts.primary};\n  text-align: ${props => (props.alignCenter ? 'center' : null)};\n  text-transform: uppercase;\n  text-decoration: underline;\n  font-size: 11px;\n  margin: 10px 0 0;\n  margin-bottom: 0 !important;\n  border: none;\n  padding: 0px;\n  transition: none;\n\n  &:hover {\n    background: inherit;\n    border-color: inherit;\n    color: inherit;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin: ${desktopVw(10)} 0 0;\n    font-size: ${desktopVw(11)};\n  }\n`\n\nconst saveCustomerAccessToken = saveState('customerAccessToken')\n\nconst LogIn = ({ location, data }) => {\n  const getRedirectURL = query => {\n    if (query) {\n      const queryParams = queryString.parse(query)\n      const { redirecturi } = queryParams\n      if (redirecturi) {\n        return redirecturi\n      }\n      return null\n    }\n    return null\n  }\n\n  const redirectToCheckoutIfApplicable = async redirectURL => {\n    if (redirectURL) {\n      // Case 1. If coming from shopify checkout's login\n      if ((redirectURL || '').includes('checkout.onequince.com')) {\n        const loginURL = await getShopifyLoginURL(redirectURL)\n        if (loginURL) {\n          window.location.href = loginURL\n        } else {\n          window.location.href = redirectURL\n        }\n      } else window.location.href = redirectURL\n    } else {\n      // Case 2. Default behavior\n      navigate('/account/my-orders-returns')\n    }\n  }\n\n  useEffect(() => {\n    if (isLoggedIn()) {\n      redirectToCheckoutIfApplicable(getRedirectURL(location.search))\n    }\n  }, [])\n\n  const page = data.contentfulAuthenticationPage\n\n  const { register, handleSubmit, errors } = useForm()\n  const { loginUser } = useLoginUser()\n\n  const [serverError, setServerError] = useState()\n  const [unverifiedAccount, setUnverifiedAccount] = useState(false)\n  const [verificationEmailSent, setVerificationEmailSent] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [email, setEmail] = useState()\n  const { fetchUserWishlist } = useWishlist()\n\n  const resendVerificationEmail = async email => {\n    try {\n      await Auth.resendSignUp(email)\n      eventTracker.trackClick(EventType.BUTTON_CLICK, {\n        trackInternal: true,\n        category: 'login',\n        action: 'resend_verification',\n        context: {\n          login_email: email,\n          lb_user_id: getCookie(ANALYTIC_COOKIES.LB_USER_ID),\n        },\n      })\n    } catch (err) {\n      captureException(\n        err,\n        { email },\n        { type: 'API_FAILURE', API: 'RESEND_VERIFICATION_EMAIL' },\n      )\n    }\n    setUnverifiedAccount(false)\n    setVerificationEmailSent(true)\n    setTimeout(() => setVerificationEmailSent(false), 10000)\n  }\n\n  const backToLogin = () => {\n    setServerError('')\n  }\n\n  const login = async data => {\n    setServerError('')\n    setLoading(true)\n\n    const { username, password } = data\n    setEmail(username)\n\n    try {\n      // Get customer access token\n      // Sign in\n\n      await loginUser(username, password)\n\n      eventTracker.trackClick(EventType.FORM_SUBMIT, {\n        trackInternal: true,\n        category: 'login',\n        action: 'account_login',\n        context: {\n          login_email: username,\n          lb_user_id: getCookie(ANALYTIC_COOKIES.LB_USER_ID),\n        },\n      })\n      setLoading(false)\n      redirectToCheckoutIfApplicable(getRedirectURL(location.search))\n\n      fetchUserWishlist(username, true)\n    } catch (err) {\n      setLoading(false)\n\n      /** No need of capturing above error events because they are not genuine issues */\n      captureException(err, { data }, { type: 'API_FAILURE', API: 'LOGIN' })\n\n      if (err && err.code == 'UserNotFoundException') {\n        err.message =\n          'Hmm. We don\\'t have that email on record. <br/> Please verify your email or <a href=\"/sign-up\" style=\"text-decoration:underline;font-weight: 500\">sign up</a> if your account does not exist.'\n      } else if (err && err.code == 'UserNotConfirmedException') {\n        try {\n          setUnverifiedAccount(true)\n          err.message =\n            'Looks like your account is not verified. Please check your inbox for a verification link to complete the registration.'\n        } catch (err) {\n          err.message =\n            'User email not confirmed. Could not resend verification email.'\n          captureException(\n            `User email not confirmed. Could not resend verification email ${username}`,\n          )\n        }\n      } else if (err && err.code == 'InternalErrorException') {\n        err.message =\n          'Something went wrong. Please try logging in after some time.'\n      } else if (err && err.code == 'PasswordResetRequiredException') {\n        err.message = 'Unable to login. Please reset your password.'\n      }\n      setServerError(err)\n    }\n  }\n\n  return (\n    <>\n      <SEO\n        title={page.seoTitle}\n        description={page.seoDescripton}\n        slug={page.slug}\n        image={page.metaImage ? page.metaImage.fluid.src : null}\n      />\n      <AuthWrapper image={page.image}>\n        <form onSubmit={handleSubmit(login)} id='login-form' noValidate>\n          <FormHeader>\n            {documentToReactComponents(page.formHeader.json)}\n          </FormHeader>\n          {serverError && (\n            <BoxStyledErrorMessage\n              dangerouslySetInnerHTML={{ __html: serverError.message }}\n            />\n          )}\n          {unverifiedAccount && (\n            <StyledVerificationMessage>\n              cannot find verification mail?{' '}\n              <UnVerifiedMessage\n                onClick={() => resendVerificationEmail(email)}\n                trackParams={{\n                  trackInternal: true,\n                  category: 'login',\n                  action: 'account_login_unverified',\n                  context: {\n                    login_email: email || '',\n                    lb_user_id: getCookie(ANALYTIC_COOKIES.LB_USER_ID),\n                  },\n                }}\n              >\n                resend one\n              </UnVerifiedMessage>\n            </StyledVerificationMessage>\n          )}\n          {verificationEmailSent && (\n            <StyledVerificationMessage>\n              Verification E-mail Sent!\n            </StyledVerificationMessage>\n          )}\n          <Container>\n            <Input\n              type='email'\n              name='username'\n              placeholder='Email address'\n              register={register}\n              required\n              errors={errors}\n            />\n          </Container>\n          <Container>\n            <Password\n              placeholder='Password'\n              name='password'\n              showForgotPassword\n              required\n              register={register}\n              errors={errors}\n              username={email}\n              backToLogin={backToLogin}\n            />\n          </Container>\n          <Container>\n            <StyledButton type='submit' loading={loading} form='login-form'>\n              {page.buttonText}\n            </StyledButton>\n          </Container>\n          <FormFooter>\n            <p>\n              Don't have an account?{' '}\n              {getRedirectURL(location.search) ? (\n                <TrackableLink\n                  to={`/sign-up?redirecturi=${getRedirectURL(location.search)}`}\n                  trackParams={{\n                    trackInternal: true,\n                    category: 'login',\n                    action: 'click_create_account',\n                    context: {\n                      login_email: email || '',\n                      lb_user_id: getCookie(ANALYTIC_COOKIES.LB_USER_ID),\n                    },\n                  }}\n                >\n                  create one\n                </TrackableLink>\n              ) : (\n                <TrackableLink\n                  to='/sign-up'\n                  trackParams={{\n                    trackInternal: true,\n                    category: 'login',\n                    action: 'click_create_account',\n                    context: {\n                      login_email: email || '',\n                      lb_user_id: getCookie(ANALYTIC_COOKIES.LB_USER_ID),\n                    },\n                  }}\n                >\n                  create one\n                </TrackableLink>\n              )}\n            </p>\n          </FormFooter>\n        </form>\n      </AuthWrapper>\n    </>\n  )\n}\n\nexport default LogIn\n\nexport const LoginQuery = graphql`\n  query LogIn($id: String!) {\n    contentfulAuthenticationPage(id: { eq: $id }) {\n      id\n      slug\n      seoTitle\n      seoDescripton\n      image {\n        description\n        fluid(maxWidth: 3840) {\n          ...GatsbyContentfulFluid_withWebp\n        }\n      }\n      formHeader {\n        json\n      }\n      formFooter {\n        json\n      }\n      buttonText\n    }\n  }\n`\n"],"sourceRoot":""}