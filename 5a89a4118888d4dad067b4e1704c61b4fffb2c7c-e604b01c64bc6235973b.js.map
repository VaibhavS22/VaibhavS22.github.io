{"version":3,"sources":["webpack:///./src/utils/collection.js","webpack:///./src/hooks/useFetchInventoryTag.js","webpack:///./src/utils/api.js"],"names":["genderMap","women","men","home","getInitialUrlForCustomCollectionPage","collectionPageSlug","email","getCookie","ANALYTIC_COOKIES","LB_CUSTOMER_EMAIL","LB_CUSTOMER_TENTATIVE_EMAIL","userId","LB_USER_ID","product","window","extractQueryParamFromPageLocation","isMobile","matchMedia","theme","breakpoints","desktopSmall","matches","process","SortLabelMap","Featured","hasNoProductsInStaticCollection","isCustomCollectionPage","filters","filteredProducts","Object","keys","length","hasNoProductsInCustomCollection","colorProductCollection","subcollections","name","CustomCollectionPages","getFilteredProductData","filteredProductsList","products","productAlreadySeen","Set","sortedProducts","forEach","fpl","has","shopifyProduct","product_id","foundProducts","filter","pr","p","concat","add","prodMap","f","findVal","colorMap","colors","element","color","find","col","color_order","push","arrangeColorsForProduct","c","getFilteredProduct","getDefaultColor","getUpdatedOrderProducts","productsOrderInfo","manualProductOrderOverride","bucket","experimentManager","getBucketForUser","productsOrderInfoMap","reduce","map","productId","updatedProducts","productIdProductsMap","decodeIdFromGraphQLResponse","orderedProducts","orderInfo","orderedProduct","values","getOrderProductsBasedOnDefinedOrder","colorNameColorObjMap","orderedColors","colorOrder","colorName","getUpdatedSubCollectionData","subCollections","sc","splitProductsByColor","productsParam","metaProductsParam","subCollectionShowAllColors","defaultColorForFirstProduct","undefined","checkIfLiveProduct","getProductCarousel","findIndex","pi","metaProducts","metaItem","productImages","initialColorsToProducts","showSkusSubCollectionLevel","handleColorAdd","productCopy","tags","t","InventoryTag","BACK_IN_STOCK","LOW_STOCK","SOLD_OUT","includes","productPackVariantMap","getProductPackVariantMap","productsThreshold","index","colorObj","showAllColors","lastRowFill","possibleFill","slice","getSanitizedFilterObj","filterObj","COLOR","SIZE","MATERIAL","STYLE","CONSTRUCTION","FABRIC","key","getProductItemAndFillerCardList","fillerCards","productItem","fillerCardPositionMap","acc","currValue","cardPosition","fp","i","type","data","colorsToProduct","numerofCardsToBeAdded","it","InventoryTagGranularity","fetchInventoryTagsForBatch","tagGranularity","productList","a","queryParams","productIds","variantIds","variantId","productIdColors","join","url","getPathParams","fetch","method","json","useFetchInventoryTag","useState","productInventoryTags","setproductInventoryTags","fetchInventoryTag","promises","j","batchProductList","inventoryTagMap","Promise","all","assign","enrichProductsByColorWithInventoryTag","productsByColor","uniqProductsByColor","uniqueElementsBy","cp1","cp2","id","productIdColorsList","cp","allColorsProductIdMap","productIdColorInventoryTagMap","productListInventoryTagMap","productColorKey","prevState","productToColorsTagsMap","productTags","tagKey","updatedTags","inventoryTag","unshift","fetchProducts","extractProductJsonFromAPIProduct","fetchProductsInBatch","batchSize","productIdsBatch","chunk","pIds","response","productsAcc","productsBatch","getProductReviews","limit","offset","params","fetchProductFeed","feed","item","next_url","captureException","API","getPairWithProducts","selectedColor","viewContextGender","PairedProducts","editShippingAddress","activeOrder","address","cardNumber","setValidationError","closeModal","reloadPageData","orderId","body","address_id","card_number","shipping_address","address1","address2","city","company","country","first_name","last_name","phone","province","zip","country_code","province_code","PROVINCE_CODE_MAP","latitude","longitude","options","headers","JSON","stringify","redirect","shippingResponse","status","message","error","orderNumber","Error","fetchFilteredProducts","Array","isArray","productsData","productColorMappedList","fetchFiltersForCustomCollectionPage","filterMasterList","getSimilarProducts","relatedProducts","fetchStoreCreditTransactions","getUserSession","userSession","Authorization","idToken","jwtToken","transactionsStr","transactions","transaction","reasonCode","fetchStoreCreditBalance","balanceStr"],"mappings":"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","file":"5a89a4118888d4dad067b4e1704c61b4fffb2c7c-e604b01c64bc6235973b.js","sourcesContent":["import {\n  checkIfLiveProduct,\n  extractQueryParamFromPageLocation,\n  getCookie,\n  getProductCarousel,\n  getProductPackVariantMap,\n} from '.'\nimport { InventoryTag } from '../hooks/useFetchInventoryTag'\nimport theme from '../styles/theme'\nimport experimentManager from '../trackers/ExperimentManager'\nimport { arrangeColorsForProduct, decodeIdFromGraphQLResponse } from './build'\nimport { ANALYTIC_COOKIES } from './constants'\n\nconst mobileProductsThreshold = 2\nconst desktopProductsThrehold = 3\n\nconst genderMap = {\n  women: 'Female',\n  men: 'Male',\n  home: 'Home',\n}\n\nexport const getInitialUrlForCustomCollectionPage = collectionPageSlug => {\n  const email =\n    getCookie(ANALYTIC_COOKIES.LB_CUSTOMER_EMAIL) ||\n    getCookie(ANALYTIC_COOKIES.LB_CUSTOMER_TENTATIVE_EMAIL) ||\n    ''\n  const userId = getCookie(ANALYTIC_COOKIES.LB_USER_ID) || ''\n  const product =\n    typeof window !== 'undefined' &&\n    extractQueryParamFromPageLocation('productId')\n  const mq =\n    typeof window !== 'undefined' &&\n    window.matchMedia(`(max-width: ${theme.breakpoints.desktopSmall}px)`)\n  const isMobile = mq.matches\n\n  const trendingPageUrls = `${\n    process.env.GATSBY_QUINCE_STORE_FRONT_API\n  }/get-product-feed?isNew=true&productId=${product}${\n    email ? `&email=${email}` : ''\n  }${userId ? `&lbUserId=${userId}` : ''}`\n\n  const genderUrl = `${process.env.GATSBY_QUINCE_STORE_FRONT_API}/get-all-products?genders=${genderMap[collectionPageSlug]}`\n\n  const url =\n    collectionPageSlug === 'trending-this-week' ? trendingPageUrls : genderUrl\n  return `${url}&limit=${isMobile ? '20' : '27'}`\n}\n\nexport const SortLabelMap = {\n  Featured: 'FEATURED',\n  'Price: low to high': 'PRICE_LOW_TO_HIGH',\n  'Price: high to low': 'PRICE_HIGH_TO_LOW',\n  'Alphabetically: A-Z': 'ALPHABETICALLY_A_TO_Z',\n  'Alphabetically: Z-A': 'ALPHABETICALLY_Z_TO_A',\n  'Oldest to newest': 'OLDEST_TO_NEWEST',\n  'Newest to oldest': 'NEWEST_TO_OLDEST',\n  'Best seller': 'BEST_SELLER',\n}\n\nexport const hasNoProductsInStaticCollection = (\n  isCustomCollectionPage,\n  filters,\n  filteredProducts,\n) => {\n  return (\n    !isCustomCollectionPage &&\n    Object.keys(filters).length > 0 &&\n    filteredProducts.length === 0\n  )\n}\n\nexport const hasNoProductsInCustomCollection = (\n  isCustomCollectionPage,\n  colorProductCollection,\n  subcollections,\n) => {\n  return (\n    isCustomCollectionPage &&\n    (colorProductCollection[subcollections[0]?.name] || []).length === 0\n  )\n}\n\nexport const getFilteredProduct = (\n  filteredProductsList = [],\n  products,\n  filters,\n) => {\n  if (filteredProductsList.length === 0 && Object.keys(filters).length > 0)\n    return []\n  if (filteredProductsList.length === 0) return products\n  if (Object.keys(filters).length === 0) {\n    // just sort on the basis of filteredProductsList\n    const productAlreadySeen = new Set()\n    let sortedProducts = []\n    filteredProductsList.forEach(fpl => {\n      if (!productAlreadySeen.has(fpl.product.shopifyProduct.product_id)) {\n        const foundProducts = products.filter(\n          pr =>\n            fpl.product.shopifyProduct.product_id ===\n            pr.p.shopifyProduct.product_id,\n        )\n        if ((foundProducts ?? []).length > 0) {\n          sortedProducts = sortedProducts.concat(foundProducts)\n          productAlreadySeen.add(fpl.product.shopifyProduct.product_id)\n        }\n      }\n    })\n    return sortedProducts\n    // eslint-disable-next-line no-else-return\n  } else {\n    const filteredProducts = []\n    const prodMap = {}\n    products.forEach(pr => {\n      prodMap[pr.p.shopifyProduct.product_id] = pr\n    })\n    filteredProductsList.forEach(f => {\n      const findVal = prodMap[f.product.shopifyProduct.product_id]\n      if (findVal) {\n        const colorMap = {}\n        findVal?.p?.colors?.forEach(element => {\n          // eslint-disable-next-line immutable/no-mutation\n          colorMap[element.name] = { ...element }\n        })\n        const color = findVal.p.colors.find(\n          col => col.name === f.color_order[0],\n        )\n        filteredProducts.push({\n          ...findVal,\n          p: {\n            ...findVal.p,\n            colors: arrangeColorsForProduct(colorMap, f.color_order),\n          },\n          c: color,\n        })\n      }\n    })\n\n    return filteredProducts\n  }\n}\n\nexport const CustomCollectionPages = [\n  'trending-this-week',\n  'women',\n  'men',\n  'home',\n]\n\nexport const getFilteredProductData = (\n  isCustomCollectionPage,\n  filteredProductsList,\n  products,\n  filters,\n) => {\n  return !isCustomCollectionPage\n    ? getFilteredProduct(filteredProductsList, products, filters)\n    : products\n}\n\nexport const getDefaultColor = isCustomCollectionPage => {\n  return (\n    isCustomCollectionPage &&\n    typeof window !== 'undefined' &&\n    extractQueryParamFromPageLocation('color')\n  )\n}\n\nexport const getOrderProductsBasedOnDefinedOrder = (\n  products,\n  productsOrderInfo,\n) => {\n  // Applying ordering on collection products.\n  const productIdProductsMap = products.reduce((map, p) => {\n    return {\n      ...map,\n      [decodeIdFromGraphQLResponse(p.shopifyProduct.product_id)]: p,\n    }\n  }, {})\n  let orderedProducts = []\n  for (const orderInfo of productsOrderInfo) {\n    const orderedProduct = productIdProductsMap[orderInfo.productId]\n    if (orderedProduct) {\n      orderedProducts.push(orderedProduct)\n      delete productIdProductsMap[orderInfo.productId]\n    }\n  }\n  orderedProducts = orderedProducts.concat(Object.values(productIdProductsMap))\n  return orderedProducts\n}\n\nexport const getUpdatedOrderProducts = (\n  products,\n  productsOrderInfo,\n  manualProductOrderOverride,\n) => {\n  const bucket = experimentManager.getBucketForUser(\n    'collection_ordering_experiment',\n  )\n  const productsOrderInfoMap = productsOrderInfo.reduce((map, p) => {\n    return {\n      ...map,\n      [p.productId]: p,\n    }\n  }, {})\n  let updatedProducts = products\n  if (bucket === 'show') {\n    updatedProducts = getOrderProductsBasedOnDefinedOrder(\n      products,\n      productsOrderInfo,\n      manualProductOrderOverride,\n    )\n  }\n  return updatedProducts.map(product => {\n    const colorNameColorObjMap = product.colors.reduce((map, c) => {\n      return { ...map, [c.name]: c }\n    }, {})\n    const orderedProduct =\n      productsOrderInfoMap[\n        decodeIdFromGraphQLResponse(product.shopifyProduct.product_id)\n      ]\n    const orderedColorNames =\n      (orderedProduct && orderedProduct.colorOrder) || []\n    let orderedColors = []\n    for (const colorName of orderedColorNames) {\n      const color = colorNameColorObjMap[colorName]\n      if (color) {\n        orderedColors.push(color)\n        delete colorNameColorObjMap[colorName]\n      }\n    }\n    orderedColors = orderedColors.concat(Object.values(colorNameColorObjMap))\n    return { ...product, colors: orderedColors }\n  })\n}\n\nexport const getUpdatedSubCollectionData = (\n  subCollections,\n  productsOrderInfo,\n  manualProductOrderOverride,\n) => {\n  return subCollections.map(sc => {\n    return {\n      ...sc,\n      products: getUpdatedOrderProducts(\n        sc.products || [],\n        productsOrderInfo,\n        manualProductOrderOverride,\n      ),\n    }\n  })\n}\n\nexport const splitProductsByColor = (\n  productsParam,\n  metaProductsParam,\n  isMobile,\n  subCollectionShowAllColors = false,\n  defaultColorForFirstProduct = undefined,\n  filteredProducts = false,\n) => {\n  const products = (productsParam || [])\n    .filter(product => checkIfLiveProduct(product))\n    .map(product => ({\n      ...product,\n      colors: product.colors.filter(\n        color =>\n          getProductCarousel(product).findIndex(\n            pi => pi.color.name === color.name,\n          ) > -1,\n      ),\n    }))\n\n  const metaProducts = (metaProductsParam || [])\n    .filter(\n      metaItem => metaItem.product && checkIfLiveProduct(metaItem.product),\n    )\n    .map(metaItem => ({\n      ...metaItem,\n      colors: metaItem.colors.filter(\n        color =>\n          metaItem.product.productImages.findIndex(\n            pi => pi.color.name === color.name,\n          ) > -1,\n      ),\n    }))\n\n  const initialColorsToProducts = []\n  const showSkusSubCollectionLevel =\n    metaProducts.length > 0\n      ? metaProducts.length <= 3\n      : filteredProducts\n      ? false\n      : products.length <= 3\n\n  const handleColorAdd = (product, color) => {\n    if (!color) return\n    const productCopy = {\n      ...product,\n      tags: (product.tags || []).filter(\n        t =>\n          ![\n            InventoryTag.BACK_IN_STOCK,\n            InventoryTag.LOW_STOCK,\n            InventoryTag.SOLD_OUT,\n          ].includes(t),\n      ),\n    }\n\n    initialColorsToProducts.push({\n      c: color,\n      p: {\n        ...productCopy,\n        productPackVariantMap: getProductPackVariantMap(productCopy),\n      },\n      pi: getProductCarousel(productCopy).filter(\n        pi => pi.color.name === color.name,\n      ),\n    })\n  }\n\n  const productsThreshold = isMobile\n    ? mobileProductsThreshold\n    : desktopProductsThrehold\n\n  if (products && products.length > 0) {\n    products\n      .filter(product => checkIfLiveProduct(product))\n      .forEach((product, index) => {\n        if (product.color) {\n          const colorObj = product.colors.find(\n            color => color.name === product.color,\n          )\n          handleColorAdd(product, colorObj)\n        } else if (product && product.colors) {\n          if (defaultColorForFirstProduct && index == 0) {\n            const color = product.colors.find(\n              color => color.name === defaultColorForFirstProduct,\n            )\n            handleColorAdd(product, color || product.colors[0])\n          } else if (product.showAllColors || subCollectionShowAllColors) {\n            product.colors.forEach(color => handleColorAdd(product, color))\n          } else if (!showSkusSubCollectionLevel)\n            handleColorAdd(product, product.colors[0])\n          else if (product.colors.length > productsThreshold) {\n            if (index === products.length - 1) {\n              const currentFill =\n                initialColorsToProducts.length + productsThreshold\n              const lastRowFill = currentFill % productsThreshold\n              if (lastRowFill > 0) {\n                const possibleFill =\n                  productsThreshold + productsThreshold - lastRowFill\n                product.colors.slice(0, possibleFill).forEach(color => {\n                  handleColorAdd(product, color)\n                })\n              } else {\n                product.colors.slice(0, productsThreshold).forEach(color => {\n                  handleColorAdd(product, color)\n                })\n              }\n            } else {\n              product.colors.slice(0, productsThreshold).forEach(color => {\n                handleColorAdd(product, color)\n              })\n            }\n          } else {\n            product.colors.forEach(color => handleColorAdd(product, color))\n          }\n        }\n      })\n  }\n  return initialColorsToProducts\n}\n\nexport const getSanitizedFilterObj = filters => {\n  const filterObj = {\n    COLOR: filters.COLOR,\n    SIZE: filters.SIZE,\n    'PRICE RANGE': filters['PRICE RANGE'],\n    MATERIAL: filters.MATERIAL,\n    STYLE: filters.STYLE,\n    CONSTRUCTION: filters.CONSTRUCTION,\n    FABRIC: filters.FABRIC,\n  }\n  Object.keys(filterObj).forEach(\n    key => filterObj[key] === undefined && delete filterObj[key],\n  )\n  return filterObj\n}\n\nexport const getProductItemAndFillerCardList = (\n  filteredProducts,\n  fillerCards,\n) => {\n  const productItem = []\n  const fillerCardPositionMap = (fillerCards || []).reduce((acc, currValue) => {\n    if (currValue.cardPosition) {\n      acc[currValue.cardPosition] = currValue\n    }\n    return acc\n  }, {})\n  filteredProducts.forEach((fp, i) => {\n    if (typeof fillerCardPositionMap[i] !== 'undefined') {\n      productItem.push({\n        type: 'Filler_Card',\n        data: fillerCardPositionMap[i],\n      })\n    }\n    productItem.push({ type: 'Product_Item', colorsToProduct: fp })\n  })\n\n  const numerofCardsToBeAdded =\n    (productItem || []).length % 3 === 0\n      ? 0\n      : 3 - ((productItem || []).length % 3)\n  const validFillerCards = (fillerCards || []).filter(\n    it =>\n      (it.cardPosition && it.cardPosition > filteredProducts.length) ||\n      !it.cardPosition,\n  )\n  const marketingCards = validFillerCards.slice(0, numerofCardsToBeAdded)\n  marketingCards.forEach(it => {\n    productItem.push({ type: 'Filler_Card', data: it })\n  })\n  return productItem\n}\n","import { useState } from 'react'\nimport {\n  decodeIdFromGraphQLResponse,\n  getPathParams,\n  uniqueElementsBy,\n} from '../utils'\n\nexport const InventoryTagGranularity = {\n  PRODUCT: 'product',\n  VARIANT: 'variant',\n  PRODUCT_COLOR: 'product_color',\n}\n\nexport const InventoryTag = {\n  BACK_IN_STOCK: 'Back in stock',\n  LOW_STOCK: 'Low Stock',\n  SOLD_OUT: 'Sold Out',\n}\n\nconst fetchInventoryTagsForBatch = async (tagGranularity, productList) => {\n  if (!tagGranularity || !productList || productList.length === 0) {\n    return {}\n  }\n  let queryParams = { tagGranularity }\n  const productIds = [...new Set(productList.map(p => p.productId))]\n  const variantIds = [...new Set(productList.map(p => p.variantId))]\n  const productIdColors = [\n    ...new Set(productList.map(p => `${p.productId}_${p.color}`)),\n  ]\n\n  switch (tagGranularity) {\n    case InventoryTagGranularity.PRODUCT:\n      queryParams = { ...queryParams, productIds: productIds.join(',') }\n      break\n    case InventoryTagGranularity.VARIANT:\n      queryParams = { ...queryParams, variantIds: variantIds.join(',') }\n      break\n    case InventoryTagGranularity.PRODUCT_COLOR:\n      queryParams = {\n        ...queryParams,\n        productIdColors: productIdColors.join(','),\n      }\n      break\n    default:\n      return {}\n  }\n\n  const url = `${\n    process.env.GATSBY_QUINCE_STORE_FRONT_API\n  }/get-product-inventory-tag${getPathParams(queryParams)}`\n\n  return (\n    await fetch(url, {\n      method: 'GET',\n    })\n  ).json()\n}\n\nconst useFetchInventoryTag = () => {\n  const [productInventoryTags, setproductInventoryTags] = useState({})\n\n  const fetchInventoryTag = async ({ tagGranularity, productList }) => {\n    // Calling in a batch of 75 products at a time, to ensure we are not exceeding get URL length limit.\n    const batchSize = 75\n    const promises = []\n    for (let i = 0, j = productList.length; i < j; i += batchSize) {\n      const batchProductList = productList.slice(i, i + batchSize)\n      promises.push(\n        fetchInventoryTagsForBatch(tagGranularity, batchProductList),\n      )\n    }\n    let inventoryTagMap = {}\n    const promiseResults = await Promise.all(promises)\n    promiseResults.forEach(p => {\n      inventoryTagMap = Object.assign(inventoryTagMap, p)\n    })\n    return inventoryTagMap\n  }\n\n  const enrichProductsByColorWithInventoryTag = async productsByColor => {\n    const uniqProductsByColor = uniqueElementsBy(\n      productsByColor,\n      (cp1, cp2) => cp1.p.id === cp2.p.id,\n    )\n\n    const productIdColorsList = uniqProductsByColor\n      .reduce((acc, cp) => {\n        const allColorsProductIdMap = cp.p.colors.map(color => {\n          return {\n            productId: decodeIdFromGraphQLResponse(\n              cp.p.shopifyProduct.product_id,\n            ),\n            color: color.name,\n          }\n        })\n        return [...acc, ...allColorsProductIdMap]\n      }, [])\n      .filter(\n        i => productInventoryTags[`${i.productId}_${i.color}`] === undefined,\n      )\n\n    const productIdColorInventoryTagMap = await fetchInventoryTag({\n      tagGranularity: InventoryTagGranularity.PRODUCT_COLOR,\n      productList: productIdColorsList,\n    })\n    const productListInventoryTagMap = productIdColorsList.reduce(\n      (acc, currValue) => {\n        const productColorKey = `${currValue.productId}_${currValue.color}`\n        return {\n          ...acc,\n          [productColorKey]:\n            productIdColorInventoryTagMap[productColorKey] ?? null,\n        }\n      },\n      {},\n    )\n    setproductInventoryTags(prevState => ({\n      ...prevState,\n      ...productListInventoryTagMap,\n    }))\n    let productToColorsTagsMap = {}\n    uniqProductsByColor.forEach(cp => {\n      let productTags = {}\n      cp.p.colors.forEach(color => {\n        const tagKey = `${decodeIdFromGraphQLResponse(\n          cp.p.shopifyProduct.product_id,\n        )}_${color.name}`\n        const updatedTags = cp.p.tags.filter(\n          t =>\n            ![\n              InventoryTag.BACK_IN_STOCK,\n              InventoryTag.LOW_STOCK,\n              InventoryTag.SOLD_OUT,\n            ].includes(t),\n        )\n        const inventoryTag = productIdColorInventoryTagMap[tagKey]\n        if (inventoryTag) {\n          // give highest priority to inventory tags\n          updatedTags.unshift(inventoryTag)\n        }\n        productTags = { ...productTags, [color.name]: updatedTags }\n      })\n      productToColorsTagsMap = {\n        ...productToColorsTagsMap,\n        [cp.p.shopifyProduct.product_id]: productTags,\n      }\n    })\n    return productsByColor.map(cp => {\n      return {\n        ...cp,\n        p: {\n          ...cp.p,\n          tags:\n            productToColorsTagsMap[cp.p.shopifyProduct.product_id][cp.c.name],\n          productTags: productToColorsTagsMap[cp.p.shopifyProduct.product_id],\n        },\n      }\n    })\n  }\n\n  return { fetchInventoryTag, enrichProductsByColorWithInventoryTag }\n}\n\nexport default useFetchInventoryTag\n","import {\n  arrangeColorsForProduct,\n  chunk,\n  extractProductJsonFromAPIProduct,\n} from './build'\nimport { captureException } from '../components/Sentry/utils'\nimport { getPathParams, getUserSession } from './index'\n\nimport { getInitialUrlForCustomCollectionPage } from './collection'\n\nimport { PROVINCE_CODE_MAP } from './constants'\n\nexport const fetchProducts = async (productIds = []) => {\n  const products = await (\n    await fetch(\n      `${\n        process.env.GATSBY_QUINCE_STORE_FRONT_API\n      }/get-products?productIds=${productIds.join(',')}`,\n    )\n  ).json()\n  return products.map(product =>\n    extractProductJsonFromAPIProduct(product, 1440),\n  )\n}\n\nexport const fetchProductsInBatch = async (\n  productIds = [],\n  batchSize = 100,\n) => {\n  const productIdsBatch = chunk(productIds, batchSize)\n  const response = await Promise.all(\n    productIdsBatch.map(pIds => fetchProducts(pIds)),\n  )\n  return response.reduce(\n    (productsAcc, productsBatch) => productsAcc.concat(productsBatch),\n    [],\n  )\n}\n\nexport async function getProductReviews({\n  productId,\n  limit,\n  offset,\n  queryParams,\n}) {\n  const params = getPathParams({\n    productId,\n    limit,\n    offset,\n    ...queryParams,\n  })\n  return (\n    await fetch(\n      `${process.env.GATSBY_QUINCE_STORE_FRONT_API}/get-product-reviews${params}`,\n      {\n        method: 'GET',\n      },\n    )\n  ).json()\n}\n\nexport const fetchProductFeed = async url => {\n  try {\n    const feed = await (\n      await fetch(url, {\n        method: 'GET',\n      })\n    ).json()\n    const products =\n      feed.data\n        .map(item => {\n          const colorMap = {}\n          item?.product?.colors?.forEach(element => {\n            colorMap[element.name] = { ...element }\n          })\n          return {\n            ...item,\n            product: {\n              ...item.product,\n              colors: arrangeColorsForProduct(colorMap, item.color_order),\n            },\n          }\n        })\n        .map(p => extractProductJsonFromAPIProduct(p.product, 1440)) || []\n    const response = {\n      next_url: feed.next_url,\n      products,\n    }\n    return response\n  } catch (e) {\n    captureException(\n      e,\n      { url },\n      { type: 'API_FAILURE', API: 'GET_PRODUCT_FEED' },\n    )\n  }\n}\n\nexport const getPairWithProducts = async (\n  productId,\n  selectedColor,\n  viewContextGender,\n) => {\n  const url = `${\n    process.env.GATSBY_QUINCE_STORE_FRONT_API\n  }/get-paired-products?productId=${productId}&color=${selectedColor}&type=control${\n    viewContextGender ? `&viewContextGender=${viewContextGender}` : ''\n  }`\n  try {\n    const PairedProducts = await fetch(url)\n    const response = PairedProducts.json()\n    return response\n  } catch (e) {\n    captureException(\n      e,\n      { url },\n      { type: 'API_FAILURE', API: 'GET_PAIRED_PRODUCTS' },\n    )\n  }\n}\n\nexport const editShippingAddress = async ({\n  activeOrder,\n  id,\n  address,\n  cardNumber,\n  setValidationError,\n  closeModal,\n  reloadPageData,\n}) => {\n  try {\n    const url = `https://api.onequince.com/service/orders/${activeOrder?.orderId}/update-shipping-address`\n    const body = {}\n    if (id) {\n      // eslint-disable-next-line immutable/no-mutation\n      body.address_id = id\n    } else {\n      // eslint-disable-next-line immutable/no-mutation\n      body.card_number = cardNumber\n      // eslint-disable-next-line immutable/no-mutation\n      body.shipping_address = {\n        address1: address.address1,\n        address2: address.address2 || '',\n        city: address.city,\n        company: address.company || '',\n        country: address.country,\n        first_name: address.first_name,\n        last_name: address.last_name,\n        phone: address.phone || '',\n        province: address.province,\n        zip: address.zip,\n        name: `${address.first_name} ${address.last_name}`,\n        country_code: 'US',\n        province_code:\n          (address.province && PROVINCE_CODE_MAP[address.province]) || '',\n        latitude: null,\n        longitude: null,\n      }\n    }\n\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n      redirect: 'follow',\n    }\n    const shippingResponse = await fetch(url, options)\n    const response = await shippingResponse.json()\n    if (response) {\n      if (response.status === 500) {\n        setValidationError(response.message || response.error)\n      } else if (response.status === 400) {\n        setValidationError(response.message || response.error)\n      } else if (response.status === 200) {\n        closeModal()\n        reloadPageData(address, activeOrder?.orderNumber)\n      } else {\n        throw new Error`${response.status}: ${response.message ||\n          response.error}`()\n      }\n    }\n    return response\n  } catch (e) {\n    captureException(\n      `Edit Shipping Address API request failed with following error: ${e}`,\n      { activeOrder },\n      {\n        API: 'Edit Shipping Address',\n        type: 'API_FAILURE',\n      },\n    )\n  }\n}\n\nexport const fetchFilteredProducts = async (filters = {}, productIds = []) => {\n  if (Array.isArray(productIds) && productIds.length > 0) {\n    const params = { ...filters, productIds, limit: 1000 }\n    const url = `${\n      process.env.GATSBY_QUINCE_STORE_FRONT_API\n    }/get-all-products${getPathParams(params)}`\n\n    try {\n      const productsData = await (await fetch(url)).json()\n      const products = (productsData?.data ?? []).map(p =>\n        extractProductJsonFromAPIProduct(p.product, 1440),\n      )\n\n      const productColorMappedList = products.map((pr, index) => {\n        return {\n          product: pr,\n          color_order: productsData.data[index].color_order,\n        }\n      })\n      return productColorMappedList\n    } catch (e) {\n      captureException(\n        e,\n        { url },\n        { type: 'API_FAILURE', API: 'GET_FILTERED_PRODUCTS' },\n      )\n    }\n  }\n  return []\n}\n\nexport const fetchFiltersForCustomCollectionPage = async collectionPageSlug => {\n  try {\n    const feed = await (\n      await fetch(\n        `${getInitialUrlForCustomCollectionPage(\n          collectionPageSlug,\n        )}&mode=FILTER_MASTER_LIST&filtersSet=color,price`,\n        {\n          method: 'GET',\n        },\n      )\n    ).json()\n    return feed.filterMasterList\n  } catch (e) {\n    captureException(\n      e,\n      { url: `${getInitialUrlForCustomCollectionPage(collectionPageSlug)}` },\n      { type: 'API_FAILURE', API: 'GET_FILTER' },\n    )\n  }\n}\n\nexport const getSimilarProducts = async (\n  productId,\n  selectedColor,\n  viewContextGender,\n) => {\n  const url = `${\n    process.env.GATSBY_QUINCE_STORE_FRONT_API\n  }/get-similar-products?productId=${productId}&color=${selectedColor}${\n    viewContextGender ? `&viewContextGender=${viewContextGender}` : ''\n  }`\n  try {\n    const relatedProducts = await fetch(url)\n    const response = relatedProducts.json()\n    return response\n  } catch (e) {\n    captureException(\n      e,\n      { url },\n      { type: 'API_FAILURE', API: 'GET_RELATED_PRODUCTS' },\n    )\n    return []\n  }\n}\n\nexport async function fetchStoreCreditTransactions() {\n  try {\n    const userSession = await getUserSession()\n    const transactionsStr = await fetch(\n      `${process.env.GATSBY_STORE_CREDITS_ENDPOINT}/customer/transactions`,\n      {\n        headers: { Authorization: `Bearer ${userSession?.idToken?.jwtToken}` },\n      },\n    )\n\n    const transactions = await transactionsStr.json()\n    return transactions.filter(transaction =>\n      ['ORDER_PAYMENT', 'ORDER_RETURN'].includes(transaction?.reasonCode),\n    )\n  } catch (e) {\n    captureException(\n      `Store Credit Transactions failed with following error: ${e}`,\n      {},\n      {\n        API: 'Get Store Credit Transactions',\n        type: 'API_FAILURE',\n      },\n    )\n    return []\n  }\n}\n\nexport async function fetchStoreCreditBalance() {\n  try {\n    const userSession = await getUserSession()\n    const balanceStr = await fetch(\n      `${process.env.GATSBY_STORE_CREDITS_ENDPOINT}/customer/balance`,\n      {\n        headers: { Authorization: `Bearer ${userSession?.idToken?.jwtToken}` },\n      },\n    )\n    return await balanceStr.json()\n  } catch (e) {\n    captureException(\n      `Store Credit balance fetch failed with following error: ${e}`,\n      {},\n      {\n        API: 'Get Store Credit Balance',\n        type: 'API_FAILURE',\n      },\n    )\n    return 0\n  }\n}\n"],"sourceRoot":""}