{"version":3,"sources":["webpack:///./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack:///./node_modules/algoliasearch-helper/src/version.js","webpack:///./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack:///./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack:///./src/components/SEO.js","webpack:///./node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","webpack:///./node_modules/react-instantsearch-core/node_modules/react-fast-compare/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/merge.js","webpack:///./node_modules/algoliasearch-helper/src/functions/find.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack:///./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/context.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createConnector.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectSearchBox.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectStateResults.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack:///./src/components/SearchBox.js","webpack:///./src/templates/Search.js","webpack:///./node_modules/algoliasearch-helper/index.js","webpack:///./src/hooks/useDebounce.js","webpack:///./src/components/ProductGrid.js","webpack:///./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack:///./node_modules/algoliasearch-helper/src/functions/compact.js","webpack:///./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack:///./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack:///./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack:///./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack:///./node_modules/algoliasearch-helper/src/functions/omit.js","webpack:///./src/components/PageLoader.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/orderBy.js"],"names":["merge","requestBuilder","_getQueries","index","state","queries","push","indexName","params","_getHitsSearchParams","getRefinedDisjunctiveFacets","forEach","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","hierarchicalFacet","getHierarchicalFacetByName","currentRefinement","getHierarchicalRefinement","separator","_getHierarchicalFacetSeparator","length","split","facets","concat","disjunctiveFacets","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","numericFilters","_getNumericFilters","additionalParams","tagFilters","_getTagFilters","getQueryParams","facet","hierarchicalRootLevel","hitsPerPage","page","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","facetName","Object","keys","numericRefinements","attribute","operators","operator","values","value","Array","isArray","vs","map","v","tagRefinements","join","facetsRefinements","facetValue","facetsExcludes","disjunctiveFacetsRefinements","facetValues","orFilters","hierarchicalFacetsRefinements","undefined","attributeToRefine","attributesIndex","rootPath","_getHierarchicalRootPath","indexOf","slice","lastIndexOf","attributes","hierarchicalFacets","reduce","allAttributes","hierarchicalRefinement","name","level","newAttributes","rootLevel","attributeIndex","parentLevel","getSearchForFacetQuery","query","maxFacetHits","stateForSearchForFacetValues","isDisjunctiveFacet","clearRefinements","searchForFacetSearchParameters","facetQuery","module","exports","SearchParameters","SearchResults","DerivedHelper","events","inherits","objectHasKeys","version","AlgoliaSearchHelper","client","options","addAlgoliaAgent","this","setClient","opts","make","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","Error","_change","setPage","isPageReset","getCurrentPage","EventEmitter","prototype","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","setQueryParameters","self","emit","then","content","results","_originalResponse","e","catch","err","searchForFacetValues","userState","clientHasSFFV","initIndex","isDisjunctive","algoliaQuery","facetHits","f","isRefined","isDisjunctiveFacetRefined","isFacetRefined","setQuery","q","resetPage","clearTags","addDisjunctiveFacetRefinement","addDisjunctiveRefine","apply","arguments","addHierarchicalFacetRefinement","addNumericRefinement","addFacetRefinement","addRefine","addFacetExclusion","addExcludeRefinement","addExclude","addTag","tag","addTagRefinement","removeNumericRefinement","removeDisjunctiveFacetRefinement","removeDisjunctiveRefine","removeHierarchicalFacetRefinement","removeFacetRefinement","removeRefine","removeFacetExclusion","removeExcludeRefinement","removeExclude","removeTag","removeTagRefinement","toggleFacetExclusion","toggleExcludeFacetRefinement","toggleExclude","toggleRefinement","toggleFacetRefinement","toggleRefine","toggleTag","toggleTagRefinement","nextPage","previousPage","setIndex","setQueryParameter","parameter","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","getNumericRefinements","isConjunctiveFacet","isHierarchicalFacet","isHierarchicalFacetRefined","isExcluded","isExcludeRefined","isDisjunctiveRefined","hasTag","isTagRefined","hasTagRefinements","getIndex","getPage","getTags","getRefinements","refinements","getConjunctiveRefinements","r","type","getExcludeRefinements","getDisjunctiveRefinements","getNumericRefinement","getHierarchicalFacetBreadcrumb","states","mainQueries","queriesCount","helper","derivedQueries","derivedHelper","derivedState","getModifiedState","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","error","s","specificResults","splice","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","find","sortBy","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","SEO","title","description","slug","canonicalUrl","image","schemaData","noindex","nofollow","category","reviewsAndRatings","price","userReviews","reviews","review","author","datePublished","dateCreated","body","reviewRating","bestRating","ratingValue","rating","worstRating","property","rel","href","hrefLang","toFixed","averageRating","count","JSON","stringify","t","defineProperty","enumerable","configurable","writable","getOwnPropertySymbols","n","filter","getOwnPropertyDescriptor","o","getOwnPropertyDescriptors","defineProperties","Symbol","iterator","toString","call","a","u","i","next","done","return","TypeError","from","key","localStorage","window","parse","getItem","get","miss","Promise","resolve","all","set","setItem","delete","clear","removeItem","caches","shift","serializable","c","Math","floor","random","l","replace","encodeURIComponent","h","d","data","entries","timeout","headers","queryParameters","cacheable","m","Read","Write","Any","g","status","lastUpdate","Date","now","b","protocol","url","accept","P","j","method","toLowerCase","userAgent","pop","message","transporterStackTrace","A","w","path","connectTimeout","timeouts","connect","responseTimeout","request","response","host","triesLeft","p","onSucess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","getTimeout","statelessHosts","reverse","S","add","segment","T","charAt","substr","C","appId","authMode","apiKey","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","methods","N","k","requests","J","propertyIsEnumerable","I","E","W","XMLHttpRequest","open","setRequestHeader","setTimeout","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","console","multipleQueries","multipleSearchForFacetValues","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","constructor","it","size","has","RegExp","source","flags","valueOf","hasOwnProperty","$$typeof","match","warn","isObjectOrArrayOrFunction","_merge","target","sourceVal","targetVal","array","comparator","defaultsPure","omit","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","mainHelper","main","detach","removeAllListeners","parameters","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","_objectSpread","ownKeys","sym","shallowEqual","objA","objB","keysA","keysB","hasOwn","resolved","removeEmptyKey","obj","object","sourceKeys","_key","_createContext","onInternalStateUpdate","createHrefForState","onSearchForFacetValues","onSearchStateChange","onSearchParameters","store","widgetsManager","mainTargetedIndex","InstantSearchConsumer","Consumer","InstantSearchProvider","Provider","_createContext2","IndexConsumer","createConnector","connectorDesc","Composed","Connector","displayName","isWidget","getSearchParameters","getMetadata","transitionState","Component","_Component","props","_this","providedProps","getProvidedProps","_ref","_len","args","contextValue","refine","getState","widgets","_ref2","_len2","_key2","_ref3","_len3","_key3","ais","multiIndexContext","indexContextValue","_this2","unsubscribe","subscribe","isUnmounting","unregisterWidget","registerWidget","nextProps","nextState","shouldComponentUpdate","propsEqual","prevProps","update","cleanUp","_this$props$contextVa","resultsFacetValues","searching","searchingForFacetValues","isSearchStalled","metadata","searchResults","searchParameters","nextWidgetsState","prevWidgetsState","_this$props","refineProps","createURL","searchForFacetValuesProps","searchForItems","createElement","propTypes","defaultProps","createConnectorWithoutContext","getIndexId","context","hasMultipleIndices","targetedIndex","refineValue","searchState","nextRefinement","namespace","indexId","_objectSpread4","indices","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","parts","attributeName","getCurrentRefinementValue","defaultValue","_getNamespaceAndAttri","multiIndex","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","Boolean","_ref4","indexSearchState","cleanUpValueWithMultiIndex","cleanUpValueWithSingleIndex","getCurrentRefinement","_refine","string","_cleanUp","items","label","hits","getResults","allSearchResults","createWidgetsManager","onWidgetsUpdate","scheduled","scheduleUpdate","widget","getWidgets","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","addAlgoliaAgents","searchClient","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","format","encode","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","on","stalledSearchTimer","_store$getState","partialState","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","_cacheHydrated","_useCache","baseMethod","methodArgs","requestsWithSerializedParams","acc","result","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","listeners","listener","createStore","_internalIndexId","hydrateResultsState","sharedParameters","res","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","isDerivedHelpersEmpty","getFacetByName","currentState","nextIsSearchStalled","getWidgetsIds","meta","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","updateClient","updateIndex","newIndex","skipSearch","isControlled","InstantSearch","instantSearchManager","onWidgetsInternalStateUpdate","prevState","nextIsControlled","previousSearchState","prevIsControlled","refresh","getKnownKeys","_searchState","children","isRequired","shape","func","bool","oneOfType","node","number","Title","styled","h1","theme","fonts","secondary","breakpoints","desktopSmall","desktopVw","Container","div","StyledInput","input","primary","colors","greyLight","hasInput","SearchBox","callRefine","onChangeDebounced","currentTarget","debounce","delay","render","placeholder","onChange","DebouncedSearchBox","connectSearchBox","StyledSearch","section","SearchBoxWrapper","ProductsCount","span","HitsWrapper","NoResults","RichText","heading","RecommendedAside","aside","RecommendedTitle","h2","RecommendedList","ul","RecommendedItem","li","StyledLoader","PageLoader","mobileVw","algoliasearch","process","Hits","connectStateResults","setHasInput","allProducts","hasResults","nbHits","searchTerm","useRef","useDetectDevices","devices","useState","loading","setLoading","contentfulProducts","setContentfulProducts","useEffect","productIds","hit","product_id","currentSearchTerm","current","fetchProductsInBatch","products","product","shopifyProduct","checkIfLiveProduct","totalItems","totalCount","color","productImages","pi","countProductsByColor","trim","eventTracker","track","EventType","SEARCH","searchQuery","ProductGrid","tracker","applyDebounce","json","SearchQuery","Search","contentfulPage","nodes","allContentfulProduct","recommendedProducts","setRecommendedProducts","email","getCookie","ANALYTIC_COOKIES","LB_CUSTOMER_EMAIL","LB_CUSTOMER_TENTATIVE_EMAIL","userId","LB_USER_ID","fetchProductFeed","seoTitle","seoDescription","pageType","metaImage","fluid","src","desktop","live","ProductThumbnail","contentfulProduct","staticPrice","variants","edges","algoliasearchHelper","useDebounce","handler","StyledProductGrid","ProductItem","tablet","tabletVw","Products","splitProductsByColor","metaProducts","prefetchColor","handleColorAdd","productColor","tags","InventoryTag","BACK_IN_STOCK","LOW_STOCK","SOLD_OUT","includes","className","animationDelay","colorsToProducts","setColorsToProducts","enrichProductsByColorWithInventoryTag","useFetchInventoryTag","didMount","updatedColorsToProducts","productRows","colorsToProduct","initialDelay","prefetchedColor","ctor","superCtor","create","intersection","valToNumber","RefinementList","isEqualNumericRefinement","every","el","newParameters","_parseNumbers","paramName","isKeyKnown","PARAMETERS","isValueDefined","numbers","parsedValue","parseFloat","isNaN","insideBoundingBox","geoRect","parsedValues","vPrime","instance","toggleHierarchicalFacetRefinement","validate","patch","_clearNumericRefinements","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","isNumericRefined","paramValue","op","val","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","refinement","part","arr1","arr2","sources","reduceRight","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","subtree","picked","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","generateHierarchicalTree","LoadingContainer","rotate","keyframes","Loader","greyLighter","compact","findIndex","formatSort","getIndices","idx","assignFacetStats","dest","facetStats","stats","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","position","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","dataFromMainRequest","defaultData","root","excludes","_state","recSort","sortFn","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","resultsFacets","predicate","DEFAULT_SORT","getFacetValues","extractNormalizedFacetValues","order","hierarchicalFacetValues","vanillaSortFn","getFacetStats","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee"],"mappings":"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","file":"component---src-templates-search-js-320fff2e69033bd06ad2.js","sourcesContent":["'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = []; // One query for the hits\n\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    }); // One for each disjunctive facets\n\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    }); // maybe more to get the root level of hierarchical facets when activated\n\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n\n    var numericFilters = requestBuilder._getNumericFilters(state);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeToRefine;\n      var attributesIndex; // we ask for parent facet values only when the `facet` is the current hierarchical facet\n\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce( // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0]; // if no refinement, ask for root level\n\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || ''; // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n\n    return merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = '3.2.2';","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\n\nvar SearchResults = require('./SearchResults');\n\nvar DerivedHelper = require('./DerivedHelper');\n\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\n\nvar inherits = require('./functions/inherits');\n\nvar objectHasKeys = require('./functions/objectHasKeys');\n\nvar version = require('./version');\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\n\n\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n\n  return this;\n};\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\n\n\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\n\n\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\n\n\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n\n  if (!clientHasSFFV && typeof this.client.initIndex !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  var self = this;\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  var searchForFacetValuesPromise = clientHasSFFV ? this.client.searchForFacetValues([{\n    indexName: state.index,\n    params: algoliaQuery\n  }]) : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.value) : state.isFacetRefined(facet, f.value);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\n\n\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\n\n\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\n\n\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\n\n\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n/**\n * @private\n */\n\n\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\n\n\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\n\n\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  } // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n\n\n  return false;\n};\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\n\n\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\n\n\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\n\n\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\n\n\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\n\n\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\n\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\n\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\n\n\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\n\n\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\n\n\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n}; // /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\n\n\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\n\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.client = newClient;\n  return this;\n};\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\n\n\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\n\n\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\n\n\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\n\nmodule.exports = AlgoliaSearchHelper;","'use strict';\n\nvar find = require('./find');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst SEO = ({\n  title,\n  description,\n  type,\n  slug,\n  canonicalUrl,\n  image,\n  noindex,\n  nofollow,\n  schemaData,\n  category,\n  reviewsAndRatings,\n  price,\n}) => {\n  const index =\n    noindex || process.env.GATSBY_BUILD_ENVIRONMENT !== 'production'\n      ? 'noindex'\n      : 'index'\n  const follow =\n    nofollow || process.env.GATSBY_BUILD_ENVIRONMENT !== 'production'\n      ? 'nofollow'\n      : 'follow'\n  const userReviews =\n    schemaData &&\n    reviewsAndRatings &&\n    reviewsAndRatings.reviews.map(review => {\n      return {\n        '@type': 'Review',\n        author: review.author,\n        datePublished: review.dateCreated,\n        description: review.body,\n        reviewRating: {\n          '@type': 'Rating',\n          bestRating: '5',\n          ratingValue: `${review.rating}`,\n          worstRating: '1',\n        },\n      }\n    })\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='robots' content={`${index}, ${follow}`} />\n      <meta name='description' content={description || ''} />\n      <meta property='og:title' content={title || ''} />\n      <meta property='og:type' content={type || ''} />\n      <meta property='og:url' content={`https://www.onequince.com/${slug}`} />\n      <meta property='og:image' content={image && image} />\n      <link\n        rel='alternate'\n        href={`https://www.onequince.com/${slug}`}\n        hrefLang='en-US'\n      />\n      <link\n        rel='canonical'\n        href={canonicalUrl || `https://www.onequince.com/${slug}`}\n      />\n      {schemaData && reviewsAndRatings && (\n        <script type='application/ld+json'>\n          {`{\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"${type}\",\n              \"name\": \"${title}\",\n              \"description\": \"${description}\",\n              \"image\": \"${image}\",\n              \"category\": \"${category}\",\n              \"brand\": \"Quince\",\n              \"offers\": {\n                \"@type\": \"Offer\",\n                \"availability\": \"http://schema.org/InStock\",\n                \"price\": \"${price && price.toFixed(2)}\",\n                \"priceCurrency\": \"USD\"\n              },\n              \"aggregateRating\": {\n                \"@type\" : \"AggregateRating\",\n                \"ratingValue\": \"${reviewsAndRatings.averageRating}\",\n                \"reviewCount\": \"${reviewsAndRatings.count}\"\n              },\n              \"review\": ${JSON.stringify(userReviews)}\n            }`}\n        </script>\n      )}\n      {schemaData && !reviewsAndRatings && (\n        <script type='application/ld+json'>\n          {`{\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"${type}\",\n              \"name\": \"${title}\",\n              \"description\": \"${description}\",\n              \"image\": \"${image}\",\n              \"category\": \"${category}\",\n              \"brand\": \"Quince\",\n              \"offers\": {\n                \"@type\": \"Offer\",\n                \"availability\": \"http://schema.org/InStock\",\n                \"price\": \"${price && price.toFixed(2)}\",\n                \"priceCurrency\": \"USD\"\n              }\n            }`}\n        </script>\n      )}\n    </Helmet>\n  )\n}\n\nexport default SEO\n","/*! algoliasearch-lite.umd.js | 4.5.1 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var o = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(o), !0).forEach(function (t) {\n        e(r, t, o[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(o, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        o = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          o = {},\n          a = Object.keys(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      }\n\n      return o;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var a = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n      }\n    }\n\n    return o;\n  }\n\n  function o(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          o = !1,\n          a = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {\n          ;\n        }\n      } catch (e) {\n        o = !0, a = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function n() {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        a = function a() {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = a()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = o(e, 2),\n              n = t[0],\n              a = t[1];\n          return Promise.all([n, a || r.miss(n)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve().then(function () {\n          var o = a();\n          return o[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(o)), t;\n        });\n      },\n      delete: function _delete(e) {\n        return Promise.resolve().then(function () {\n          var t = a();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function clear() {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = a(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function _delete(e) {\n        return Promise.resolve();\n      },\n      clear: function clear() {\n        return Promise.resolve();\n      }\n    } : {\n      get: function get(e, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, o).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, o);\n        });\n      },\n      set: function set(e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function _delete(e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function clear() {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function get(r, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            a = JSON.stringify(r);\n        if (a in t) return Promise.resolve(e.serializable ? JSON.parse(t[a]) : t[a]);\n\n        var u = n(),\n            i = o && o.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function set(r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function _delete(e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function clear() {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function l(e, t) {\n    return Object.keys(void 0 !== t ? t : {}).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e;\n  }\n\n  function f(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n      r[n - 1] = arguments[n];\n    }\n\n    var o = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[o++]);\n    });\n  }\n\n  var h = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function d(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var m = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      p = 1,\n      v = 2,\n      y = 3;\n\n  function g(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p;\n    return r(r({}, e), {}, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function b(e) {\n    return \"string\" == typeof e ? {\n      protocol: \"https\",\n      url: e,\n      accept: m.Any\n    } : {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || m.Any\n    };\n  }\n\n  var O = \"GET\",\n      P = \"POST\";\n\n  function q(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(g(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === p || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === y && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          o = [].concat(a(r), a(n));\n      return {\n        getTimeout: function getTimeout(e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: o.length > 0 ? o.map(function (e) {\n          return b(e);\n        }) : t\n      };\n    });\n  }\n\n  function j(e, t, n, o) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === O || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r(r({}, e.data), t.data);\n      return JSON.stringify(n);\n    }(n, o),\n        s = function (e, t) {\n      var n = r(r({}, e.headers), t.headers),\n          o = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        o[e.toLowerCase()] = t;\n      }), o;\n    }(e, o),\n        c = n.method,\n        l = n.method !== O ? {} : r(r({}, n.data), o.data),\n        f = r(r(r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters), l), o.queryParameters),\n        h = 0,\n        d = function t(r, a) {\n      var l = r.pop();\n      if (void 0 === l) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var d = {\n        data: i,\n        headers: s,\n        method: c,\n        url: w(l, n.path, f),\n        connectTimeout: a(h, e.timeouts.connect),\n        responseTimeout: a(h, o.timeout)\n      },\n          m = function m(e) {\n        var t = {\n          request: d,\n          response: e,\n          host: l,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          p = {\n        onSucess: function onSucess(e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function onRetry(n) {\n          var o = m(n);\n          return n.isTimedOut && h++, Promise.all([e.logger.info(\"Retryable failure\", x(o)), e.hostsCache.set(l, g(l, n.isTimedOut ? y : v))]).then(function () {\n            return t(r, a);\n          });\n        },\n        onFail: function onFail(e) {\n          throw m(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                o = r;\n\n            try {\n              o = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(o, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(d).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, p);\n      });\n    };\n\n    return q(e.hostsCache, t).then(function (e) {\n      return d(a(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function S(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function add(e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function w(e, t, r) {\n    var n = T(r),\n        o = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (o += \"?\".concat(n)), o;\n  }\n\n  function T(e) {\n    return Object.keys(e).map(function (t) {\n      return f(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return x(e);\n    });\n  }\n\n  function x(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r(r({}, e), {}, {\n      request: r(r({}, e.request), {}, {\n        headers: r(r({}, e.request.headers), t)\n      })\n    });\n  }\n\n  var C = function C(e) {\n    var t = e.appId,\n        n = function (e, t, r) {\n      var n = {\n        \"x-algolia-api-key\": r,\n        \"x-algolia-application-id\": t\n      };\n      return {\n        headers: function headers() {\n          return e === h.WithinHeaders ? n : {};\n        },\n        queryParameters: function queryParameters() {\n          return e === h.WithinQueryParameters ? n : {};\n        }\n      };\n    }(void 0 !== e.authMode ? e.authMode : h.WithinHeaders, t, e.apiKey),\n        a = function (e) {\n      var t = e.hostsCache,\n          r = e.logger,\n          n = e.requester,\n          a = e.requestsCache,\n          u = e.responsesCache,\n          i = e.timeouts,\n          s = e.userAgent,\n          c = e.hosts,\n          l = e.queryParameters,\n          f = {\n        hostsCache: t,\n        logger: r,\n        requester: n,\n        requestsCache: a,\n        responsesCache: u,\n        timeouts: i,\n        userAgent: s,\n        headers: e.headers,\n        queryParameters: l,\n        hosts: c.map(function (e) {\n          return b(e);\n        }),\n        read: function read(e, t) {\n          var r = d(t, f.timeouts.read),\n              n = function n() {\n            return j(f, f.hosts.filter(function (e) {\n              return 0 != (e.accept & m.Read);\n            }), e, r);\n          };\n\n          if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n          var a = {\n            request: e,\n            mappedRequestOptions: r,\n            transporter: {\n              queryParameters: f.queryParameters,\n              headers: f.headers\n            }\n          };\n          return f.responsesCache.get(a, function () {\n            return f.requestsCache.get(a, function () {\n              return f.requestsCache.set(a, n()).then(function (e) {\n                return Promise.all([f.requestsCache.delete(a), e]);\n              }, function (e) {\n                return Promise.all([f.requestsCache.delete(a), Promise.reject(e)]);\n              }).then(function (e) {\n                var t = o(e, 2);\n                t[0];\n                return t[1];\n              });\n            });\n          }, {\n            miss: function miss(e) {\n              return f.responsesCache.set(a, e);\n            }\n          });\n        },\n        write: function write(e, t) {\n          return j(f, f.hosts.filter(function (e) {\n            return 0 != (e.accept & m.Write);\n          }), e, d(t, f.timeouts.write));\n        }\n      };\n      return f;\n    }(r(r({\n      hosts: [{\n        url: \"\".concat(t, \"-dsn.algolia.net\"),\n        accept: m.Read\n      }, {\n        url: \"\".concat(t, \".algolia.net\"),\n        accept: m.Write\n      }].concat(c([{\n        url: \"\".concat(t, \"-1.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-2.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-3.algolianet.com\")\n      }]))\n    }, e), {}, {\n      headers: r(r(r({}, n.headers()), {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }), e.headers),\n      queryParameters: r(r({}, n.queryParameters()), e.queryParameters)\n    }));\n\n    return l({\n      transporter: a,\n      appId: t,\n      addAlgoliaAgent: function addAlgoliaAgent(e, t) {\n        a.userAgent.add({\n          segment: e,\n          version: t\n        });\n      },\n      clearCache: function clearCache() {\n        return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n      }\n    }, e.methods);\n  },\n      N = function N(e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return l(n, r.methods);\n    };\n  },\n      k = function k(e) {\n    return function (t, n) {\n      var o = t.map(function (e) {\n        return r(r({}, e), {}, {\n          params: T(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: P,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: o\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      J = function J(e) {\n    return function (t, o) {\n      return Promise.all(t.map(function (t) {\n        var a = t.params,\n            u = a.facetName,\n            i = a.facetQuery,\n            s = n(a, [\"facetName\", \"facetQuery\"]);\n        return N(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: I\n          }\n        }).searchForFacetValues(u, i, r(r({}, o), s));\n      }));\n    };\n  },\n      E = function E(e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      I = function I(e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      F = 1,\n      R = 2,\n      D = 3;\n\n  function W(e, t, n) {\n    var o,\n        a = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function send(e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                o = function o(e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                a = o(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(a), n = o(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (o = D, {\n        debug: function debug(e, t) {\n          return F >= o && console.debug(e, t), Promise.resolve();\n        },\n        info: function info(e, t) {\n          return R >= o && console.info(e, t), Promise.resolve();\n        },\n        error: function error(e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.5.1\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: S(\"4.5.1\").add({\n        segment: \"Browser\",\n        version: \"lite\"\n      }),\n      authMode: h.WithinQueryParameters\n    };\n    return C(r(r(r({}, a), n), {}, {\n      methods: {\n        search: k,\n        searchForFacetValues: J,\n        multipleQueries: k,\n        multipleSearchForFacetValues: J,\n        initIndex: function initIndex(e) {\n          return function (t) {\n            return N(e)(t, {\n              methods: {\n                search: E,\n                searchForFacetValues: I\n              }\n            });\n          };\n        }\n      }\n    }));\n  }\n\n  return W.version = \"4.5.1\", W;\n});","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView; // Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    } // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n\n\n    var it;\n\n    if (hasMap && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n\n      while (!(i = it.next()).done) {\n        if (!b.has(i.value[0])) return false;\n      }\n\n      it = a.entries();\n\n      while (!(i = it.next()).done) {\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      }\n\n      return true;\n    }\n\n    if (hasSet && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n\n      while (!(i = it.next()).done) {\n        if (!b.has(i.value[0])) return false;\n      }\n\n      return true;\n    } // END: Modifications\n\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (a[i] !== b[i]) return false;\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    } // END: fast-deep-equal\n    // START: react-fast-compare\n    // custom handling for DOM elements\n\n\n    if (hasElementType && a instanceof Element) return false; // custom handling for React/Preact\n\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n        continue;\n      } // all other properties should be traversed as usual\n\n\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    } // END: react-fast-compare\n    // START: fast-deep-equal\n\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n} // end fast-deep-equal\n\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    } // some other error. we should definitely know about these\n\n\n    throw error;\n  }\n};","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n\n  return target;\n}\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","'use strict'; // @MAJOR can be replaced by native Array#find when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};","'use strict';\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] && refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","'use strict';\n\nvar events = require('events');\n\nvar inherits = require('../functions/inherits');\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\n\n\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\n\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\"; // From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\n\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!isPlainObject(value)) {\n      return;\n    }\n\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread({}, hit, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n\n  return hits.map(function (hit) {\n    return _objectSpread({}, hit, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n} // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var _key = sourceKeys[i];\n\n    if (excluded.indexOf(_key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    target[_key] = source[_key];\n  }\n\n  return target;\n}\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\n\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}","import { createContext } from 'react';\n\nvar _createContext = createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n}),\n    InstantSearchConsumer = _createContext.Consumer,\n    InstantSearchProvider = _createContext.Provider;\n\nexport { InstantSearchConsumer, InstantSearchProvider };\n\nvar _createContext2 = createContext(undefined),\n    IndexConsumer = _createContext2.Consumer,\n    IndexProvider = _createContext2.Provider;\n\nexport { IndexConsumer, IndexProvider };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\nimport { InstantSearchConsumer, IndexConsumer } from './context';\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\n\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var Connector = /*#__PURE__*/function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props) {\n        var _this;\n\n        _classCallCheck(this, Connector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this.props.contextValue.onInternalStateUpdate( // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.contextValue.createHrefForState( // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this.props.contextValue.onSearchForFacetValues( // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props);\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.isUnmounting = true;\n\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n\n          if (this.unregisterWidget) {\n            this.unregisterWidget();\n\n            if (typeof connectorDesc.cleanUp === 'function') {\n              var nextState = connectorDesc.cleanUp.call(this, this.props, this.props.contextValue.store.getState().widgets);\n              this.props.contextValue.store.setState(_objectSpread({}, this.props.contextValue.store.getState(), {\n                widgets: nextState\n              }));\n              this.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n            }\n          }\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n              widgets = _this$props$contextVa.widgets,\n              results = _this$props$contextVa.results,\n              resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n              searching = _this$props$contextVa.searching,\n              searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n              isSearchStalled = _this$props$contextVa.isSearchStalled,\n              metadata = _this$props$contextVa.metadata,\n              error = _this$props$contextVa.error;\n\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              contextValue = _this$props.contextValue,\n              props = _objectWithoutProperties(_this$props, [\"contextValue\"]);\n\n          var providedProps = this.state.providedProps;\n\n          if (providedProps === null) {\n            return null;\n          }\n\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component);\n\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n\n    return Connector;\n  };\n}\n\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed);\n\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n\n    return ConnectorWrapper;\n  };\n};\n\nexport default createConnectorWithContext;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport { omit } from './utils';\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n\n    var indexId = getIndexId(context);\n\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n} // eslint-disable-next-line max-params\n\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\n\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], nextRefinement, page))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, nextRefinement, page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, nextRefinement, page);\n} // eslint-disable-next-line max-params\n\n\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread({}, searchState.indices[indexId][namespace], nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, _defineProperty({}, namespace, _objectSpread({}, searchState[namespace], nextRefinement)), page);\n}\n\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\n\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n      indexId = _ref.indexId,\n      namespace = _ref.namespace,\n      attributeName = _ref.attributeName,\n      id = _ref.id,\n      searchState = _ref.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n\n  return Object.hasOwnProperty.call(searchState, id);\n}\n\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n      indexId = _ref2.indexId,\n      namespace = _ref2.namespace,\n      attributeName = _ref2.attributeName,\n      id = _ref2.id,\n      searchState = _ref2.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n\n  return searchState[id];\n}\n\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri.namespace,\n      attributeName = _getNamespaceAndAttri.attributeName;\n\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri2.namespace,\n      attributeName = _getNamespaceAndAttri2.attributeName;\n\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\n\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n      id = _ref3.id,\n      namespace = _ref3.namespace,\n      attribute = _ref3.attribute;\n\n  if (namespace) {\n    return _objectSpread({}, searchState, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n\n  return omit(searchState, [id]);\n}\n\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n      indexId = _ref4.indexId,\n      id = _ref4.id,\n      namespace = _ref4.namespace,\n      attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n\n  if (namespace && indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, indexSearchState, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n\n  if (indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n\n  return searchState;\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from '../core/indexUtils';\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query\n * @name connectSearchBox\n * @kind connector\n * @propType {string} [defaultRefinement] - Provide a default value for the query\n * @providedPropType {function} refine - a function to change the current query\n * @providedPropType {string} currentRefinement - the current query used\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\n/**\n * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`\n * of InstantSearch.\n * For instance this connector allows you to create results/noResults or query/noQuery pages.\n * @name connectStateResults\n * @kind connector\n * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)\n * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)\n * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results\n * @providedPropType {string} error - If the search failed, the error will be logged here.\n * @providedPropType {boolean} searching - If there is a search in progress.\n * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.\n * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.\n * @providedPropType {object} props - component props.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Content = connectStateResults(({ searchState, searchResults }) => {\n *   const hasResults = searchResults && searchResults.nbHits !== 0;\n *\n *    return (\n *      <div>\n *        <div hidden={!hasResults}>\n *          <Hits />\n *        </div>\n *        <div hidden={hasResults}>\n *          <div>No results has been found for {searchState.query}</div>\n *        </div>\n *      </div>\n *    );\n * });\n *\n * const App = () => (\n *   <InstantSearch\n *      searchClient={searchClient}\n *      indexName=\"instant_search\"\n *    >\n *      <SearchBox />\n *      <Content />\n *    </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaStateResults',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      searchState: searchState,\n      searchResults: results,\n      allSearchResults: searchResults.results,\n      searching: searchResults.searching,\n      isSearchStalled: searchResults.isSearchStalled,\n      error: searchResults.error,\n      searchingForFacetValues: searchResults.searchingForFacetValues,\n      props: props\n    };\n  }\n});","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","import { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: [],\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results)) {\n      return results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits; // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}","export default '6.7.0';","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","import React, { Component } from 'react'\nimport { debounce } from '../utils'\nimport styled from 'styled-components'\nimport { desktopVw } from '../styles/utils'\n\nconst Title = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  text-transform: uppercase;\n  font-weight: 500;\n  margin-bottom: 15px;\n  font-size: 48px;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(64)};\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  padding: 27px 0;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: ${desktopVw(45)} ${desktopVw(232)};\n  }\n`\n\nconst StyledInput = styled.input`\n  width: 80%;\n  font-family: ${props => props.theme.fonts.primary};\n  background: #f4f4f4;\n  padding: 15px 25px;\n  border: none;\n  font-size: 15px;\n\n  &[type='search']::-webkit-search-decoration,\n  &[type='search']::-webkit-search-cancel-button,\n  &[type='search']::-webkit-search-results-button,\n  &[type='search']::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n  }\n\n  &::placeholder {\n    color: ${props => props.theme.colors.greyLight};\n  }\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    width: 100%;\n    margin-top: ${props => props.hasInput && desktopVw(30)};\n    font-size: ${desktopVw(15)};\n  }\n`\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props)\n    this.callRefine = debounce(this.callRefine, props.delay)\n    this.state = {\n      value: this.props.currentRefinement,\n    }\n  }\n\n  callRefine = value => {\n    this.props.refine(value)\n  }\n\n  onChangeDebounced = event => {\n    const value = event.currentTarget.value\n\n    this.callRefine(value)\n\n    this.setState(() => ({\n      value,\n    }))\n  }\n\n  render() {\n    const { value } = this.state\n    const { placeholder } = this.props\n\n    return (\n      <Container>\n        <Title>Search</Title>\n        <StyledInput\n          value={value}\n          onChange={this.onChangeDebounced}\n          placeholder={placeholder}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default SearchBox\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport algoliasearch from 'algoliasearch/lite'\nimport {\n  connectSearchBox,\n  connectStateResults,\n  InstantSearch,\n} from 'react-instantsearch-dom'\n\nimport { desktopVw, mobileVw } from '../styles/utils'\nimport { checkIfLiveProduct, getCookie } from '../utils'\n\nimport SEO from '../components/SEO'\nimport ProductGrid from '../components/ProductGrid'\nimport ProductThumbnail from '../components/ProductThumbnail'\nimport RichText from '../components/RichText'\nimport eventTracker from '../trackers/EventTracker'\nimport EventType from '../trackers/eventType'\nimport SearchBox from '../components/SearchBox'\nimport { PageLoader } from '../components/PageLoader'\nimport { fetchProductFeed, fetchProductsInBatch } from '../utils/api'\nimport useDetectDevices from '../hooks/useDetectDevices'\nimport { ANALYTIC_COOKIES } from '../utils/constants'\nimport { extractProductJsonFromAPIProduct } from '../utils/build'\n\nconst DebouncedSearchBox = connectSearchBox(SearchBox)\n\nconst StyledSearch = styled.section`\n  margin-bottom: 40px;\n  background: ${props => props.theme.colors.secondary};\n  z-index: 1100;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    margin-bottom: ${desktopVw(50)};\n  }\n`\n\nconst SearchBoxWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 0 10px;\n\n  * {\n    -webkit-appearance: none;\n  }\n\n  .ais-SearchBox-submit,\n  .ais-SearchBox-reset,\n  button {\n    display: none;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: 0 ${desktopVw(80)};\n\n    form {\n      display: flex;\n    }\n  }\n`\n\nconst ProductsCount = styled.span`\n  display: none;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    display: flex;\n    margin-bottom: ${desktopVw(37)};\n    padding: 0 ${desktopVw(80)};\n    font-size: ${desktopVw(10)};\n    color: ${props => props.theme.colors.greyLight};\n    text-transform: uppercase;\n  }\n`\n\nconst HitsWrapper = styled.div``\n\nconst NoResults = styled(RichText)`\n  text-align: center;\n  text-transform: uppercase;\n\n  p {\n    font-weight: 500;\n    font-family: ${props => props.theme.fonts.heading};\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-bottom: ${desktopVw(40)};\n    p {\n      font-size: ${desktopVw(20)};\n    }\n  }\n`\n\nconst RecommendedAside = styled.aside`\n  margin-bottom: ${desktopVw(90)};\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-top: ${desktopVw(-150)};\n  }\n`\n\nconst RecommendedTitle = styled.h2`\n  font-size: 48px;\n  font-family: ${props => props.theme.fonts.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  line-height: 70px;\n  margin-bottom: 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    font-size: ${desktopVw(64)};\n    line-height: ${desktopVw(210)};\n    margin-bottom: 0;\n    letter-spacing: -${desktopVw(4)};\n  }\n`\n\nconst RecommendedList = styled.ul`\n  display: flex;\n  overflow-x: scroll;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  padding: 0 ${desktopVw(40)};\n`\n\nconst RecommendedItem = styled.li`\n  padding-right: 10px;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    min-width: ${desktopVw(360)};\n    padding-right: ${desktopVw(40)};\n  }\n`\n\nconst StyledLoader = styled(PageLoader)`\n  padding: ${mobileVw(240)} 0;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: ${desktopVw(150)} 0;\n  }\n`\n\nconst searchClient = algoliasearch(\n  process.env.GATSBY_ALGOLIA_APP_ID,\n  process.env.GATSBY_ALGOLIA_SEARCH_KEY,\n)\n\nconst countProductsByColor = products => {\n  let totalCount = 0\n  products\n    .filter(product => checkIfLiveProduct(product))\n    .forEach(product => {\n      if (product.colors) {\n        product.colors.forEach(color => {\n          const colorPresent = product.productImages.filter(\n            pi => pi.color.name === color.name,\n          )\n          if (colorPresent.length > 0) totalCount++\n        })\n      }\n    })\n  return totalCount\n}\n\nconst Hits = connectStateResults(\n  ({ searchResults, searchState, setHasInput, allProducts, placeholder }) => {\n    const hasInput = searchState.query && searchState.query !== ''\n    const nbHits = searchResults && searchResults.nbHits\n    const hasResults = nbHits !== 0\n    const searchTerm = useRef(null)\n    const { devices } = useDetectDevices()\n\n    const [loading, setLoading] = useState(false)\n    const [contentfulProducts, setContentfulProducts] = useState([])\n\n    useEffect(() => {\n      setHasInput(hasInput)\n    }, [hasInput])\n\n    useEffect(() => {\n      if (searchResults && searchResults.hits.length > 0) {\n        const productIds = searchResults.hits.map(hit => hit.product_id)\n        ;(async () => {\n          const currentSearchTerm = searchTerm.current\n          if (currentSearchTerm) {\n            setLoading(true)\n            const products = await fetchProductsInBatch(productIds)\n            if (currentSearchTerm === searchTerm.current) {\n              setContentfulProducts(products)\n              setLoading(false)\n            }\n          } else {\n            setContentfulProducts([])\n            setLoading(false)\n          }\n        })()\n      }\n    }, [searchResults, searchResults?.hits])\n\n    useEffect(() => {\n      searchTerm.current = searchState.query\n    }, [searchState.query])\n\n    const products = contentfulProducts\n      .filter(product => product.shopifyProduct)\n      .filter(product => checkIfLiveProduct(product))\n\n    const totalItems = countProductsByColor(products)\n\n    useEffect(() => {\n      if (!searchState.query || !searchState.query.trim()) {\n        return\n      }\n      eventTracker.track(EventType.SEARCH, {\n        searchQuery: searchState.query.trim(),\n      })\n    }, [searchState.query])\n\n    if (loading) return <StyledLoader />\n\n    return (\n      <>\n        {hasInput && (\n          <>\n            {hasResults && totalItems > 0 ? (\n              <HitsWrapper>\n                <ProductsCount>\n                  {totalItems >= 1 ? `${totalItems} items` : `1 item`}\n                </ProductsCount>\n                <ProductGrid\n                  products={products}\n                  tracker='search_page'\n                  applyDebounce\n                />\n              </HitsWrapper>\n            ) : (\n              <NoResults json={placeholder.json} />\n            )}\n          </>\n        )}\n      </>\n    )\n  },\n)\n\nconst Search = ({ data }) => {\n  const page = data.contentfulPage\n  const { nodes } = data.allContentfulProduct ? data.allContentfulProduct : {}\n\n  const [hasInput, setHasInput] = useState(false)\n\n  const [recommendedProducts, setRecommendedProducts] = useState(null)\n\n  const { devices } = useDetectDevices()\n\n  useEffect(() => {\n    ;(async () => {\n      const email =\n        getCookie(ANALYTIC_COOKIES.LB_CUSTOMER_EMAIL) ||\n        getCookie(ANALYTIC_COOKIES.LB_CUSTOMER_TENTATIVE_EMAIL) ||\n        ''\n      const userId = getCookie(ANALYTIC_COOKIES.LB_USER_ID) || ''\n\n      const url = `${\n        process.env.GATSBY_QUINCE_STORE_FRONT_API\n      }/get-product-feed?limit=10${email ? `&email=${email}` : ''}${\n        userId ? `&lbUserId=${userId}` : ''\n      }`\n      const response = await fetchProductFeed(url)\n      setRecommendedProducts(response?.products)\n    })()\n  }, [])\n\n  return (\n    <>\n      <SEO\n        title={page.seoTitle}\n        description={page.seoDescription}\n        type={page.pageType}\n        slug={page.slug}\n        image={page.metaImage ? page.metaImage.fluid.src : null}\n      />\n      <StyledSearch>\n        <InstantSearch\n          indexName={process.env.GATSBY_ALGOLIA_INDEX_NAME}\n          searchClient={searchClient}\n        >\n          <SearchBoxWrapper hasInput={hasInput}>\n            <DebouncedSearchBox\n              placeholder={\n                devices.desktop\n                  ? 'Search for categories, products, styles, material or anything else'\n                  : 'Search for anything'\n              }\n              delay={500}\n            />\n          </SearchBoxWrapper>\n          <Hits\n            setHasInput={setHasInput}\n            allProducts={nodes}\n            placeholder={page.placeholder}\n          />{' '}\n        </InstantSearch>\n      </StyledSearch>\n      {hasInput && recommendedProducts && (\n        <RecommendedAside>\n          <RecommendedTitle>You may like</RecommendedTitle>\n          <RecommendedList>\n            {recommendedProducts\n              .filter(\n                product =>\n                  product.live === true ||\n                  process.env.GATSBY_QUINCE_INCLUDE_NON_LIVE_PRODUCTS ===\n                    'true',\n              )\n              .map((product, i) => (\n                <RecommendedItem key={product.id}>\n                  <ProductThumbnail\n                    title={product.title || product.shopifyProduct.title}\n                    contentfulProduct={product}\n                    staticPrice={\n                      product.shopifyProduct.variants.edges[0].node.price\n                    }\n                    tracker={`search_page__recommended__${i}`}\n                  />\n                </RecommendedItem>\n              ))}\n          </RecommendedList>\n        </RecommendedAside>\n      )}\n    </>\n  )\n}\n\nexport default Search\n\nexport const SearchQuery = graphql`\n  query Search($id: String!) {\n    contentfulPage(id: { eq: $id }) {\n      id\n      seoTitle\n      seoDescription\n      metaImage {\n        fluid(maxWidth: 1200) {\n          ...GatsbyContentfulFluid_withWebp\n        }\n      }\n      slug\n      placeholder {\n        json\n      }\n      recommendedProducts {\n        title\n        slug\n        subtitle\n        live\n        gender\n        metaTags\n        shippingInformation {\n          shippingInformation\n        }\n        shippingMetaInfoText {\n          shippingMetaInfoText\n        }\n        productImages {\n          color {\n            name\n          }\n          images {\n            id\n            description\n            fluid(maxWidth: 1440) {\n              ...GatsbyContentfulFluid_withWebp\n            }\n          }\n        }\n        colors {\n          name\n          hexcode\n        }\n        shopifyProduct {\n          ...ShopifyProduct\n        }\n      }\n    }\n  }\n`\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\n\nvar SearchResults = require('./src/SearchResults');\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\n\n\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\n\n\nalgoliasearchHelper.version = require('./src/version.js');\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\n\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\n\nalgoliasearchHelper.SearchParameters = SearchParameters;\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\n\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","import React, { useState, useEffect } from 'react'\n\nconst useDebounce = (value, timeout) => {\n  const [state, setState] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => setState(value), timeout)\n    return () => clearTimeout(handler)\n  }, [value, timeout])\n\n  return state\n}\n\nexport default useDebounce\n","import React, { useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport { desktopVw, mobileVw, tabletVw } from '../styles/utils'\n\nimport ProductThumbnail from './ProductThumbnail'\nimport useFetchInventoryTag, {\n  InventoryTag,\n} from '../hooks/useFetchInventoryTag'\nimport useDebounce from '../hooks/useDebounce'\n\nconst StyledProductGrid = styled.div`\n  position: relative;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    margin-bottom: ${desktopVw(92)};\n    padding: 0 ${desktopVw(80)};\n  }\n`\n\nconst ProductItem = styled.li`\n  width: calc(50% - 10px);\n  margin: 0 0 25px;\n  padding: 0 5px;\n  opacity: 1;\n  transform: translateY(0);\n\n  .product-thumbnail__image-wrapper {\n    height: ${mobileVw(212)};\n    width: 100%;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}px) {\n    .product-thumbnail__image-wrapper {\n      height: ${tabletVw(450)};\n    }\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    width: calc(25% - (1 / 4 * ${desktopVw(121)}));\n    margin: 0 ${desktopVw(40)} ${desktopVw(43)} 0;\n    padding: 0;\n\n    .product-thumbnail {\n      &__image-wrapper {\n        height: ${desktopVw(357.4)};\n      }\n    }\n  }\n`\n\nconst Products = styled.ul`\n  display: flex;\n  flex-flow: wrap;\n  padding: 0 5px;\n\n  ${ProductItem} {\n    &:nth-child(5n) {\n      width: calc(100% + 10px);\n      margin: 0 -5px 18px;\n      padding: 0;\n\n      .product-thumbnail {\n        &__image-wrapper {\n          height: 437px;\n        }\n\n        &__footer {\n          padding: 0 10px;\n        }\n      }\n    }\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: 0;\n\n    ${ProductItem} {\n      &:nth-child(5n) {\n        width: calc(25% - (1 / 4 * ${desktopVw(121)}));\n        margin: 0 ${desktopVw(40)} ${desktopVw(43)} 0;\n\n        .product-thumbnail {\n          &__image-wrapper {\n            height: ${desktopVw(357.4)};\n          }\n\n          &__footer {\n            padding: 0;\n          }\n        }\n      }\n\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n`\n\nconst ProductGrid = ({\n  className,\n  products,\n  tracker,\n  animationDelay,\n  applyDebounce = false,\n  metaProducts,\n  prefetchColor = true,\n}) => {\n  const [colorsToProducts, setColorsToProducts] = useState(\n    splitProductsByColor(products, metaProducts, prefetchColor),\n  )\n\n  const { enrichProductsByColorWithInventoryTag } = useFetchInventoryTag()\n\n  useEffect(() => {\n    if (!products || products.length == 0 || !products[0]) return\n\n    setColorsToProducts(\n      splitProductsByColor(products, metaProducts, prefetchColor),\n    )\n  }, [products])\n\n  useEffect(() => {\n    if (!metaProducts || metaProducts.length == 0 || !metaProducts[0]) return\n\n    setColorsToProducts(\n      splitProductsByColor(products, metaProducts, prefetchColor),\n    )\n  }, [metaProducts])\n\n  // This helps knowing if its the first mount call, this helps in ensuring that in case debounce is applied,\n  // we are not making call on did mount action.\n  const didMount = useRef(false)\n\n  // Pulling inventory tags with debounce to avoid multiple calls,\n  // this is needed because of Search that triggers component re-render\n  // multiple time (Roughly 20 times)\n  useEffect(() => {\n    // In case of using debounce, the api calls happens for component did mount and last render,\n    // in order to avoid first call doing this.\n    if (!didMount.current && applyDebounce) {\n      didMount.current = true\n      return\n    }\n    // TODO: Remove this dirty check\n    if (!products || products.length == 0 || !products[0]) {\n      return\n    }\n    const updatedColorsToProducts = splitProductsByColor(\n      products,\n      metaProducts,\n      prefetchColor,\n    )\n    enrichProductsByColorWithInventoryTag(updatedColorsToProducts).then(\n      productRows => {\n        setColorsToProducts(productRows)\n      },\n    )\n  }, [\n    useDebounce(products, applyDebounce ? 1000 : 0),\n    useDebounce(metaProducts, applyDebounce ? 1000 : 0),\n  ])\n\n  return (\n    <StyledProductGrid className={`${className} product-grid`}>\n      <Products className='product-grid__list'>\n        {colorsToProducts.map((colorsToProduct, i) => {\n          const count = i % 18\n          return (\n            <ProductItem\n              key={`${colorsToProduct.p.id}${i}`}\n              className='product-grid__item'\n              count={count}\n              initialDelay={i <= 17 ? 1000 : 500}\n              animationDelay={animationDelay}\n            >\n              <ProductThumbnail\n                title={\n                  colorsToProduct.p.title ||\n                  colorsToProduct.p.shopifyProduct.title\n                }\n                contentfulProduct={colorsToProduct.p}\n                staticPrice={\n                  colorsToProduct.p.shopifyProduct.variants.edges[0].node.price\n                }\n                tracker={tracker ? `${tracker}__${i}` : undefined}\n                prefetchedColor={prefetchColor && colorsToProduct.c}\n              />\n            </ProductItem>\n          )\n        })}\n      </Products>\n    </StyledProductGrid>\n  )\n}\n\nconst splitProductsByColor = (products, metaProducts, prefetchColor) => {\n  const splitProductsByColor = []\n\n  const handleColorAdd = (product, productColor, colors, productImages) => {\n    const colorPresent = product.productImages.filter(\n      pi => pi.color.name === productColor,\n    )\n    if (colorPresent.length > 0) {\n      splitProductsByColor.push({\n        c: colors.find(color => color.name === productColor),\n        p: { ...product }, // Shallow copy to avoid reference updates\n        pi: productImages.filter(pi => pi.color.name === productColor),\n      })\n    } /* Muting this for now as it is possible colors are not added\n      else {\n      captureMessage(\n        `Color ${productColor} does not exist in the product images - ${product.title ||\n          product.shopifyProduct.title}`,\n      )\n    } */\n  }\n\n  if (metaProducts && metaProducts.length > 0) {\n    metaProducts.forEach(({ colors, product }) => {\n      // Removing inventory related tags and fetching them from API.\n      product.tags = (product.tags || []).filter(\n        t =>\n          ![\n            InventoryTag.BACK_IN_STOCK,\n            InventoryTag.LOW_STOCK,\n            InventoryTag.SOLD_OUT,\n          ].includes(t),\n      )\n      if (!prefetchColor)\n        handleColorAdd(product, colors[0].name, colors, product.productImages)\n      else\n        colors.forEach(color => {\n          handleColorAdd(product, color.name, colors, product.productImages)\n        })\n    })\n  } else if (products && products.length > 0) {\n    products.forEach(product => {\n      if (product) {\n        const { color: productColor, colors, productImages } = product\n        if (colors && colors.length > 0) {\n          // Removing inventory related tags and fetching them from API.\n          product.tags = (product.tags || []).filter(\n            t =>\n              ![\n                InventoryTag.BACK_IN_STOCK,\n                InventoryTag.LOW_STOCK,\n                InventoryTag.SOLD_OUT,\n              ].includes(t),\n          )\n          if (!productColor) {\n            if (!prefetchColor) {\n              const colorPresent = product.productImages.filter(\n                pi => pi.color.name === product.colors[0].name,\n              )\n              if (colorPresent.length > 0) {\n                splitProductsByColor.push({\n                  c: product.colors[0],\n                  p: { ...product }, // Shallow copy to avoid reference updates\n                  pi: product.productImages.filter(\n                    pi => pi.color.name === product.colors[0].name,\n                  ),\n                })\n              }\n            } else\n              product.colors.forEach((color, i) => {\n                const colorPresent = product.productImages.filter(\n                  pi => pi.color.name === color.name,\n                )\n                if (colorPresent.length > 0) {\n                  splitProductsByColor.push({\n                    c: color,\n                    p: { ...product }, // Shallow copy to avoid reference updates\n                    pi: product.productImages.filter(\n                      pi => pi.color.name === color.name,\n                    ),\n                  })\n                } /* Muting the sentry capture for now as it is possible colors don't exist\n              else {\n                captureMessage(\n                  `Color ${\n                    color.name\n                  } does not exist in the product images - ${product.title ||\n                    product.shopifyProduct.title}`,\n                )\n              } */\n              })\n          } else {\n            handleColorAdd(product, productColor, colors, productImages)\n          }\n        } /* Muting Sentry capture\n        else {\n          captureMessage(\n            `No Color exists on the product - ${product.title ||\n              product.shopifyProduct.title}`,\n          )\n        } */\n      }\n    })\n  }\n  return splitProductsByColor\n}\n\nexport default ProductGrid\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar intersection = require('../functions/intersection');\n\nvar find = require('../functions/find');\n\nvar valToNumber = require('../functions/valToNumber');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar RefinementList = require('./RefinementList');\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\n\n\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n\n  return a === b;\n}\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\n\n\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\n\n\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n\n  this.hierarchicalFacets = params.hierarchicalFacets || []; // Refinements\n\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\n\n\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\n\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value); // global isNaN is ok to use here, value is only number or NaN\n\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  }); // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\n\n\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      } // get it again in case it has been cleared\n\n\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\n\n\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n\n    return this.setQueryParameters(patch);\n  },\n\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, v) {\n    var value = valToNumber(v);\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice(); // Add the element. Concat can't be used here because value can be an array.\n\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList[]} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      if (!objectHasKeys(this.numericRefinements[attribute])) {\n        return this.numericRefinements;\n      }\n\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n\n          operatorList[operator] = outValues;\n        });\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && ( // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value || // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this; // attributes used for numeric filter can also be disjunctive\n\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection( // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\n\nmodule.exports = SearchParameters;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index\n    /* skips duplicates */\n    ;\n  });\n}\n\nmodule.exports = intersection;","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;","'use strict'; // NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\n\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\n\nvar find = require('../functions/find');\n\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    } // we found a refined parent, let's add current level data under it\n\n\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  } // we always want root levels (only when there is no prefix path)\n\n\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 || // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 || // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 || // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 || // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\n\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;","'use strict'; // @MAJOR can be replaced by native Array#findIndex when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};","'use strict'; // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { desktopVw, mobileVw } from '../styles/utils'\n\nconst LoadingContainer = styled.div`\n  text-align: center;\n  padding: ${mobileVw(350)} 0;\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    padding: ${desktopVw(370)} 0;\n  }\n`\n\nconst rotate = keyframes`\n 0% {\n    transform: rotate(0); }\n  100% {\n    transform: rotate(360deg); }\n `\n\nconst Loader = styled.div`\n  height: 24px;\n  width: 24px;\n  color: ${props => props.theme.colors.greyLighter};\n  display: inline-block;\n  position: relative;\n  border: 3px solid;\n  border-radius: 50%;\n  border-right-color: ${props => props.theme.colors.greyLight};\n  animation: ${rotate} 1s linear infinite;\n\n  @media (min-width: ${props => props.theme.breakpoints.desktopSmall}px) {\n    height: ${desktopVw(24)};\n    border-width: ${desktopVw(3)};\n    width: ${desktopVw(24)};\n  }\n`\n\nexport function PageLoader({ className }) {\n  return (\n    <LoadingContainer className={className}>\n      <Loader />\n    </LoadingContainer>\n  )\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar orderBy = require('../functions/orderBy');\n\nvar compact = require('../functions/compact');\n\nvar find = require('../functions/find');\n\nvar findIndex = require('../functions/findIndex');\n\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\n\n\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\n\n\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n/*eslint-disable */\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n\n/*eslint-enable */\n\n\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n  var self = this; // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1; // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  }); // Make sure we do not keep holes within the hierarchical facets\n\n  this.hierarchicalFacets = compact(this.hierarchicalFacets); // aggregate the refined disjunctive facets\n\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet); // There should be only item in facets.\n\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        }); // previous refinements and no results so not able to find it\n\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  }); // if we have some root level values for hierarchical facets, merge them\n\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n        return f.attribute === dfacet;\n      }); // previous refinements and no results so not able to find it\n\n      if (attributeIndex === -1) {\n        return;\n      } // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n\n\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n    });\n    nextDisjunctiveResult++;\n  }); // add the excludes\n\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n  /**\n   * @type {Array}\n   */\n\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n  /**\n   * @type {Array}\n   */\n\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\n\n\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\n\n\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\n\n\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {\n    data: sortedChildren\n  });\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\n\n\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT\n  });\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n\n  throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n};\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\n\n\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\n\n\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\n\n\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\n\n\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n\n        return res;\n      }\n    } // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;"],"sourceRoot":""}